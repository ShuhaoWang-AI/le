@model Linko.LinkoExchange.Web.ViewModels.User.RegistrationViewModel

@{
    ViewBag.Title = "LinkoExchange Registration";
    var sqQuestionPool = Model.UserSQ.QuestionPool;
    var kbqQuestionPool = Model.UserKBQ.QuestionPool;
    var inValidProfile = ViewBag.InValidProfile == null ? false : ViewBag.InValidProfile;
    var inValidKBQ = ViewBag.InValidKBQ == null ? false : ViewBag.InValidKBQ;
    var inValidSQ = ViewBag.InValidSQ == null ? false : ViewBag.InValidSQ;

    var activeLink = "Register";

    var inValidUserProfileMessages = ViewBag.inValidUserProfileMessages;
    var inValidSqMessages = ViewBag.inValidSqMessages;
    var inValidKbqMessages = ViewBag.inValidKbqMessages;

    var userInfoSectionTitle = "User Information";
}

<section></section>

<style>
    .left-flow-link {
        float: left;
        margin-left: 0px;
        margin-top: 10px;
        text-align: left;
        vertical-align: bottom;
    }
</style>

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Token)

    @Html.AntiForgeryToken()
    @*<input id="profileCollapsed" name="profileCollapsed" type="hidden" value="false" />
        <input id="kbqCollapsed" name="kbqCollapsed" type="hidden" value="false" />
        <input id="sqCollapsed" name="sqCollapsed" type="hidden" value="false" />*@

    @Html.HiddenFor(m => m.RegistrationType)

    if (Model.RegistrationType == Linko.LinkoExchange.Core.Enum.RegistrationType.ReRegistration)
    {
        userInfoSectionTitle = "Registration";
        
        <div class="well">
            You are already a registered user of LinkoExchange and your user information is below.  To accept the invitation to this Organization, please agree to the Terms and Conditions and Register
        </div>
    }

    <div class="profileDiv" id="user-info-panel">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title"> @userInfoSectionTitle </h3>
                <div class="box-tools pull-right">
                    <div class="pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div>
                @if (inValidProfile)
                {
                    <div class="validation-summary-errors alert alert-danger">
                        <ul>
                            @foreach (var message in inValidUserProfileMessages)
                            {
                                <li>@message</li>
                            }
                        </ul>
                    </div> 
                }
            </div>

            <section class="box-body form-horizontal">
                <div class="form-group">
                    <label class="col-md-2 control-label">Authority Name:</label>
                    <div class="col-md-4">
                        <label class="control-label ">@Model.AuthorityName</label>
                        @Html.HiddenFor(m=>m.AuthorityName)
                    </div>
                </div>

                @{
                    if (Model.IndustryName != null)
                    {
                        <div class="form-group">
                            <label class="col-md-2 control-label">Industry Name:</label>

                            <div class="col-md-4">
                                <label class="control-label ">@Model.IndustryName</label>
                                @Html.HiddenFor(m => m.IndustryName)
                            </div>
                        </div>
                    }
                }
                <div class="form-group">
                    <label class="col-md-2 control-label">Description:</label>

                    <div class="col-md-4">
                        <label class="control-label ">@Model.ProgramName</label>
                        @Html.HiddenFor(m => m.ProgramName)
                    </div>
                </div>

                <hr />

                <div class="editabledDiv">
                    <!-- Line2 FirstName and LastName -->
                    <div class="form-group required">
                        @Html.LabelFor(model => Model.UserProfile.FirstName, htmlAttributes: new
                   {
                       @class = "control-label col-md-2 required "
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.FirstName, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control editable"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserProfile.FirstName, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>

                        @Html.LabelFor(model => Model.UserProfile.LastName, htmlAttributes: new
                   {
                       @class = "control-label col-md-2 required"
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.LastName, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserProfile.LastName, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- Line3 Organization and TitleROle -->
                    <div class="form-group ">
                        @Html.LabelFor(model => Model.UserProfile.BusinessName, htmlAttributes: new
                   {
                       @class = " control-label col-md-2 required "
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.BusinessName, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control "
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserProfile.BusinessName, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>

                        @Html.LabelFor(model => Model.UserProfile.TitleRole, htmlAttributes: new
                   {
                       @class = "control-label col-md-2"
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.TitleRole, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control"
                           }
                       })
                        </div>
                    </div>

                    <!-- Line4 Phone and Ext -->
                    <div class="form-group">
                        @Html.LabelFor(model => Model.UserProfile.PhoneNumber, htmlAttributes: new
                   {
                       @class = "control-label col-md-2 required"
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.PhoneNumber, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserProfile.PhoneNumber, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>

                        @Html.LabelFor(model => Model.UserProfile.PhoneExt, htmlAttributes: new
                   {
                       @class = "control-label col-md-2"
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.PhoneExt, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               type = "text"
                           }
                       })
                        </div>
                    </div>

                    <!-- Line6 AddressLine1 and AddressLine2 -->
                    <div class="form-group">
                        @Html.LabelFor(model => Model.UserProfile.AddressLine1, htmlAttributes: new
                   {
                       @class = "control-label col-md-2 required"
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.AddressLine1, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserProfile.AddressLine1, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>

                        @Html.LabelFor(model => Model.UserProfile.AddressLine2, htmlAttributes: new
                   {
                       @class = "control-label col-md-2"
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.AddressLine2, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control"
                           }
                       })
                        </div>

                    </div>

                    <!-- Line7 City and State -->
                    <div class="form-group">
                        @Html.LabelFor(model => Model.UserProfile.CityName, htmlAttributes: new
                   {
                       @class = "control-label col-md-2 required"
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.CityName, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserProfile.CityName, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>

                        @Html.LabelFor(model => Model.UserProfile.JurisdictionId, htmlAttributes: new
                   {
                       @class = "control-label col-md-2 required"
                   })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => Model.UserProfile.JurisdictionId, selectList: Model.UserProfile.StateList.Select(i => new SelectListItem
                       {
                           Text = i.StateName,
                           Value = i.JurisdictionId.ToString(),
                           Selected = Model.UserProfile.JurisdictionId == i.JurisdictionId
                       }).ToList(),
                                htmlAttributes: new
                                {
                                    @class = "form-control"
                                })
                            @Html.HiddenFor(model => Model.UserProfile.JurisdictionId)
                            @Html.ValidationMessageFor(m => m.UserProfile.JurisdictionId, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- Line8 Zip Code -->
                    <div class="form-group">
                        @Html.LabelFor(model => Model.UserProfile.ZipCode, htmlAttributes: new
                   {
                       @class = "control-label col-md-2 required"
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.ZipCode, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserProfile.ZipCode, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>

                    </div>
                </div>
                <hr />

                <!-- Line 9 Email -->
                <div class="form-group">
                    @Html.LabelFor(model => Model.UserProfile.Email, htmlAttributes: new
               {
                   @class = "control-label col-md-2 required"
               })
                    <div class="col-md-4">
                        @Html.EditorFor(model => Model.UserProfile.Email, additionalViewData: new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control",
                           @readonly = "readonly"
                       }
                   })
                    </div>
                </div>

                <!-- Line 10 UserName -->
                <div class="form-group">
                    @Html.LabelFor(model => Model.UserProfile.UserName, htmlAttributes: new
               {
                   @class = "control-label col-md-2 required"
               })
                    <div class="col-md-4">
                        @Html.EditorFor(model => Model.UserProfile.UserName, additionalViewData: new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control"
                       }
                   })
                        @Html.ValidationMessageFor(m => m.UserProfile.UserName, validationMessage: "", htmlAttributes: new
                   {
                       @class = "text-danger"
                   })
                    </div>
                </div>

                <!-- Line 11 Password -->
                <div class="form-group">
                    @Html.LabelFor(model => Model.UserProfile.Password, htmlAttributes: new
               {
                   @class = "control-label col-md-2 required"
               })
                    <div class="col-md-4">
                        @Html.PasswordFor(model => model.UserProfile.Password, htmlAttributes: new
                   {
                       @class = "form-control",
                       value = Model.UserProfile.Password
                   })
                        @Html.ValidationMessageFor(m => m.UserProfile.Password, validationMessage: "", htmlAttributes: new
                   {
                       @class = "text-danger"
                   })
                    </div>
                    <div>
                        <button class="btn btn-info btn-sm" data-placement="middle" data-toggle="tooltip" title="Passwords must be at least 8 characters, have at least one digit ('0'-'9'), and have at least one lowercase ('a'-'z') and one uppercase ('A'-'Z') letter. " type="button">
                            <i class="fa fa-info-circle"></i>
                        </button>
                    </div>
                </div>
                @Html.HiddenFor(m => m.UserProfile.ShowConfirmPassword)
                @if (Model.UserProfile.ShowConfirmPassword)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserProfile.ConfirmPassword, htmlAttributes: new
                   {
                       @class = "control-label col-md-2 required"
                   })

                        <div class="col-md-4">
                            @Html.PasswordFor(m => m.UserProfile.ConfirmPassword, htmlAttributes: new
                       {
                           @class = "form-control"
                       })
                            @Html.ValidationMessageFor(m => m.UserProfile.ConfirmPassword, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>
                }

            </section>

            @*<div class="box-footer">
                    <div class="form-group">
                        <div id="profileNextBtn" class="btn btn-sm btn-primary pull-right edit-button">Next</div>
                    </div>
                </div>*@
        </div>
    </div>

    <div class="profileDiv" id="kbq-panel">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title"> Knowledge Based Questions </h3>
                <div class="box-tools pull-right">
                    <div class="pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div>
                @if (inValidKBQ)
                {
                    <div class="validation-summary-errors alert alert-danger">
                        <ul>
                            @foreach (var message in inValidKbqMessages)
                            {
                                <li> @message </li>
                            } 
                        </ul>
                    </div>
                }

            </div>

            <section class="box-body form-horizontal">
                <h4>Select Answers to 5 Knowledge Based Questions</h4>
                <span>
                    Knowledge Based Questions are used along with your password to further prove your identity during report submission.
                    During report submission you will be required to enter an answer that matches what you enter below.
                </span>
                <br />
                <br />
                <br />
                <div class="editabledDiv">
                    <!-- question 1 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(model => Model.UserKBQ.KBQ1)
                        </div>
                        <div class="col-md-8">

                            @Html.DropDownListFor(
                                                  model => Model.UserKBQ.KBQ1,
                                selectList: kbqQuestionPool.Select(i => new SelectListItem
                                {
                                    Text = i.Content,
                                    Value = i.QuestionId.Value.ToString(),
                                    Selected = Model.UserKBQ.KBQ1 == i.QuestionId.Value
                                }),
                                htmlAttributes: new
                                {
                                    @class = "form-control"
                                }
                                )
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQ1, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- anwser 1 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(i => Model.UserKBQ.KBQAnswer1, htmlAttributes: new
                       {
                           @class = "control-label required"
                       })
                        </div>

                        <div class="col-md-8">
                            @Html.HiddenFor(model => Model.UserKBQ.UserQuestionAnserId_KBQ1)

                            @Html.EditorFor(model => Model.UserKBQ.KBQAnswer1, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               style = "margin-top:5px",
                               autocomplete = "off"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer1, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- question 2 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(model => Model.UserKBQ.KBQ2)
                        </div>
                        <div class="col-md-8">
                            @Html.DropDownListFor(
                                                  model => Model.UserKBQ.KBQ2,
                                selectList: kbqQuestionPool.Select(i => new SelectListItem
                                {
                                    Text = i.Content,
                                    Value = i.QuestionId.Value.ToString(),
                                    Selected = Model.UserKBQ.KBQ2 == i.QuestionId.Value
                                }),
                                htmlAttributes: new
                                {
                                    @class = "form-control"
                                })
                            @Html.HiddenFor(model => Model.UserKBQ.KBQ2)
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQ2, validationMessage: "", htmlAttributes: new
                        {
                            @class = "text-danger"
                        })
                        </div>
                    </div>

                    <!-- anwser 2 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(i => Model.UserKBQ.KBQAnswer2, htmlAttributes: new
                       {
                           @class = "control-label required"
                       })
                        </div>

                        <div class="col-md-8">
                            @Html.HiddenFor(model => Model.UserKBQ.UserQuestionAnserId_KBQ2)
                            @Html.EditorFor(model => Model.UserKBQ.KBQAnswer2, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               style = "margin-top:5px",
                               autocomplete = "off"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer2, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- question 3 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(model => Model.UserKBQ.KBQ3)
                        </div>
                        <div class="col-md-8">
                            @Html.DropDownListFor(
                                                  model => Model.UserKBQ.KBQ3,
                                selectList: kbqQuestionPool.Select(i => new SelectListItem
                                {
                                    Text = i.Content,
                                    Value = i.QuestionId.Value.ToString(),
                                    Selected = Model.UserKBQ.KBQ3 == i.QuestionId.Value
                                }),
                                htmlAttributes: new
                                {
                                    @class = "form-control"
                                })
                            @Html.HiddenFor(model => Model.UserKBQ.KBQ3)
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQ3, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- anwser 3 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(i => Model.UserKBQ.KBQAnswer3, htmlAttributes: new
                       {
                           @class = "control-label required"
                       })
                        </div>

                        <div class="col-md-8">
                            @Html.HiddenFor(model => Model.UserKBQ.UserQuestionAnserId_KBQ3)
                            @Html.EditorFor(model => Model.UserKBQ.KBQAnswer3, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               style = "margin-top:5px",
                               autocomplete = "off"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer3, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- question 4 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(model => Model.UserKBQ.KBQ4)
                        </div>
                        <div class="col-md-8">

                            @Html.DropDownListFor(
                                                  model => Model.UserKBQ.KBQ4,
                                selectList: kbqQuestionPool.Select(i => new SelectListItem
                                {
                                    Text = i.Content,
                                    Value = i.QuestionId.Value.ToString(),
                                    Selected = Model.UserKBQ.KBQ4 == i.QuestionId.Value
                                }),
                                htmlAttributes: new
                                {
                                    @class = "form-control"
                                })
                            @Html.HiddenFor(model => Model.UserKBQ.KBQ4)
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQ4, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })

                        </div>
                    </div>

                    <!-- anwser 4 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(i => Model.UserKBQ.KBQAnswer4, htmlAttributes: new
                       {
                           @class = "control-label required"
                       })
                        </div>

                        <div class="col-md-8">
                            @Html.HiddenFor(model => Model.UserKBQ.UserQuestionAnserId_KBQ4)
                            @Html.EditorFor(model => Model.UserKBQ.KBQAnswer4, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               style = "margin-top:5px",
                               autocomplete = "off"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer4, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- question 5 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(model => Model.UserKBQ.KBQ5)
                        </div>
                        <div class="col-md-8">

                            @Html.DropDownListFor(
                                                  model => Model.UserKBQ.KBQ5,
                                selectList: kbqQuestionPool.Select(i => new SelectListItem
                                {
                                    Text = i.Content,
                                    Value = i.QuestionId.Value.ToString(),
                                    Selected = Model.UserKBQ.KBQ5 == i.QuestionId.Value
                                }),
                                htmlAttributes: new
                                {
                                    @class = "form-control"
                                })
                            @Html.HiddenFor(model => Model.UserKBQ.KBQ5)
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQ5, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })

                        </div>
                    </div>

                    <!-- anwser 5 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(i => Model.UserKBQ.KBQAnswer5, htmlAttributes: new
                       {
                           @class = "control-label required"
                       })
                        </div>

                        <div class="col-md-8">
                            @Html.HiddenFor(model => Model.UserKBQ.UserQuestionAnserId_KBQ5)
                            @Html.EditorFor(model => Model.UserKBQ.KBQAnswer5, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               style = "margin-top:5px",
                               autocomplete = "off"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer5, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>
                </div>

            </section>
            @*<div class="box-footer">
                    <div class="form-group">
                        <div id="kbqNextBtn" class="btn btn-sm btn-primary pull-right edit-button">Next</div>
                    </div>
                </div>*@
        </div>
    </div>

    <div class="profileDiv" id="sq-panel">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title"> Security Questions </h3>
                <div class="box-tools pull-right">
                    <div class="pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div>
                @if (inValidSQ)
                {
                    <div class="validation-summary-errors alert alert-danger">
                        <ul>
                            @foreach(var message in inValidSqMessages)
                            {
                                <li>@message</li>
                            }
                        </ul>
                    </div>
                }

            </div>

            <section class="box-body form-horizontal">
                <h4>Select Answers to 2 Security Questions</h4>
                <span>
                    Security Questions are used to unlock your account if it is locked because of suspicion of compromise.
                    You may be asked the answer to these questions by your authority.
                </span>
                <br />
                <br />
                <br />
                <div class="editabledDiv">
                    <!-- question 1 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(model => Model.UserSQ.SecurityQuestion1)
                        </div>
                        <div class="col-md-8">

                            @Html.DropDownListFor(
                                                  model => Model.UserSQ.SecurityQuestion1,
                                selectList: sqQuestionPool.Select(i => new SelectListItem
                                {
                                    Text = i.Content,
                                    Value = i.QuestionId.Value.ToString(),
                                    Selected = Model.UserSQ.SecurityQuestion1 == i.QuestionId.Value
                                }),
                                htmlAttributes: new
                                {
                                    @class = "form-control"
                                })
                            @*@Html.HiddenFor(model => Model.UserSQ.SecurityQuestionAnswer1)*@
                            @Html.ValidationMessageFor(m => m.UserSQ.SecurityQuestion1, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- anwser 1 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(i => Model.UserSQ.SecurityQuestionAnswer1, htmlAttributes: new
                       {
                           @class = "control-label required"
                       })
                        </div>

                        <div class="col-md-8">
                            @Html.HiddenFor(model => Model.UserSQ.UserQuestionAnserId_SQ1)
                            @Html.EditorFor(model => Model.UserSQ.SecurityQuestionAnswer1, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control readonly",
                               style = "margin-top:5px",
                               autocomplete = "off"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserSQ.SecurityQuestionAnswer1, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>

                    <!-- question 2 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(model => Model.UserSQ.SecurityQuestion2)
                        </div>
                        <div class="col-md-8">

                            @Html.DropDownListFor(
                                                  model => Model.UserSQ.SecurityQuestion2,
                                selectList: sqQuestionPool.Select(i => new SelectListItem
                                {
                                    Text = i.Content,
                                    Value = i.QuestionId.Value.ToString(),
                                    Selected = Model.UserSQ.SecurityQuestion1 == i.QuestionId.Value
                                }),
                                htmlAttributes: new
                                {
                                    @class = "form-control"
                                })
                            @*@Html.HiddenFor(model => Model.UserSQ.SecurityQuestionAnswer2)*@
                            @Html.ValidationMessageFor(m => m.UserSQ.SecurityQuestion2, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })

                        </div>
                    </div>

                    <!-- answer 2 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(i => Model.UserSQ.SecurityQuestionAnswer2, htmlAttributes: new
                       {
                           @class = "control-label required"
                       })
                        </div>

                        <div class="col-md-8">
                            @Html.HiddenFor(model => Model.UserSQ.UserQuestionAnserId_SQ2)
                            @Html.EditorFor(model => Model.UserSQ.SecurityQuestionAnswer2, additionalViewData: new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control readonly",
                               style = "margin-top:5px;",
                               autocomplete = "off"
                           }
                       })
                            @Html.ValidationMessageFor(m => m.UserSQ.SecurityQuestionAnswer2, validationMessage: "", htmlAttributes: new
                       {
                           @class = "text-danger"
                       })
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Terms and Conditions</h3>
        </div>
        <div class="box-body">
            @*<div class="form-group">
                    <div class="col-md-8 col-md-offset-2 well">
                        <div id="divTermsAndConditions">
                            @Html.Raw(value:ViewBag.TermsAndConditionsHtml)
                        </div>
                    </div>
                </div>*@
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <div class="checkbox-inline input-group" style="margin-left: -35px">
                        @Html.CheckBoxFor(model => model.AgreeTermsAndConditions)
                        <strong>
                            I agree to the <a href="@Url.Action(actionName:"TermsAndConditions", controllerName:"Home")" target="_blank">Terms and Conditions</a>
                        </strong>
                        @Html.ValidationMessageFor(m => m.AgreeTermsAndConditions, validationMessage: "", htmlAttributes: new
                   {
                       @class = "text-danger" 
                   })
                    </div>
                </div>
            </div>
        </div>
        <div class="box-footer">
            <div class="form-group pull-right">
                <input type="submit" id="register" value="Register" disabled name="Command" class="btn btn-primary btn-sm pull-right" formaction='@Url.Action(actionName:"Register", controllerName:"Account")' formmethod="post" />
            </div>
        </div>
    </div>
                    }
@section Scripts {
    @Scripts.Render(paths: "~/bundles/jqueryval")

    <script type="text/javascript">
        var registrationType = '@Html.Raw(value:Model.RegistrationType.ToString())';

        $(document)
            .ready(function () {
                if (registrationType == 'ReRegistration') {
                    // User can not change any thing
                    $("input").attr("readonly", true);
                    $(".editabledDiv select").attr("readonly", "disabled");
                     
                    // Hide KBQ and SQ panels 
                    $("#kbq-panel").hide();
                    $("#sq-panel").hide(); 
                }
                else if (registrationType == 'ResetRegistration') {
                    // Everything should be editable except email and username
                    $("#UserProfile_Email").attr("readonly", true);
                    $("#UserProfile_UserName").attr("readonly", true);
                }
                else if (registrationType == 'NewRegistration') {
                    // All inputs are open to user
                }

                $(".profileDiv input[type='submit'").hide();

                $(document)
                    .find("#kbq-panel select")
                    .on("change"
                        , function () {
                            $(this).closest(".form-group").next().find("input[type=text]").val("");
                        });
                $(document)
                    .find("#sq-panel select")
                    .on("change"
                        , function () {
                            $(this).closest(".form-group").next().find("input[type=text]").val("");
                        });

                $('#AgreeTermsAndConditions')
                    .on('ifChecked', function () {
                        $('#register').prop('disabled',false); 
                    })
                    .on('ifUnchecked', function () {
                        $('#register').prop('disabled',true);
                    });

                $('#AgreeTermsAndConditions').iCheck('uncheck');

                $(document)
                    .on("click"
                        , "#register"
                        , function ()
                        { });
            });
    </script>
}