@model Linko.LinkoExchange.Web.ViewModels.Shared.ParameterGroupViewModel

@{
    ViewBag.Title = "Parameter Group Details";
}


@using (Html.BeginForm(actionName: null, controllerName: null, method: FormMethod.Post, htmlAttributes: new { id = "LinkoExchangeForm" }))
{
    @Html.AntiForgeryToken()

    <section>
        <ol class="breadcrumb">
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"Index", controllerName:"Authority")'"><i class=""></i> Home </a>
            </li>
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"ParameterGroups", controllerName:"Authority")'"><i class=""></i> Parameter Groups </a>
            </li>
            <li class="active">Details</li>
        </ol>
    </section>

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Parameter Group Information</h3>
            <div class="box-tools pull-right">
                @if (!ViewBag.Satus.Equals("ViewOnly"))
                {
                    <input type="submit" value="Save" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName:"ParameterGroupDetails", controllerName:"Authority")" formmethod="post" />

                    if (!ViewBag.Satus.Equals("New"))
                    {
                        <input class="btn btn-primary btn-sm" data-target="#DeleteParameterGroupModal" data-toggle="modal" type="button" value="Delete" />
                    }
                }

                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>

        <div aria-labelledby="DeleteParameterGroupModalLabel" class="col-md-12 fade modal modal-info" id="DeleteParameterGroupModal" role="dialog" tabindex="-1">
            <div class="modal-dialog" role="document">
                <div class="alert alert-dismissible alert-info modal-content">
                    <button aria-label="Close" class="close" data-dismiss="modal" type="button">&times;</button>
                    <h4 class="box-title">Delete Parameter Group</h4>

                    <div class="form-horizontal">
                        <p>
                            Do you want to delete the parameter group?<br />
                            You can not undo this deletion.
                        </p>
                        <div class="form-group">
                            <div class="pull-right">
                                <button type="submit" formnovalidate="formnovalidate" class="btn btn-primary btn-sm cancel" formaction="@Url.Action(actionName:"DeleteParameterGroup", controllerName:"Authority", routeValues:new {id = Model.Id})" formmethod="post">
                                    Yes
                                </button>
                                <button aria-label="Close" class="btn btn-primary btn-sm" data-dismiss="modal" type="button">No</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <section class="box-body form-horizontal">
            @Html.ValidationSummary(excludePropertyErrors:false, message:Message.ValidationSummaryHeaderText, htmlAttributes:new
                                                                                                                            {
                                                                                                                                @class = "alert alert-danger"
                                                                                                                            })
            @Html.HiddenFor(model => model.Id)

            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-dismissible alert-success">
                    <button aria-hidden="true" class="close" data-dismiss="alert" type="button">&times;</button>
                    <h5>
                        <i class="fa fa-check icon"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            <div class="form-group">
                @Html.HiddenFor(model => model.Id)
                @Html.Hidden(name: "SelectedParameters")
                @Html.LabelFor(model => model.Name, htmlAttributes:new
                                                                   {
                                                                       @class = "control-label col-md-2 required"
                                                                   })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Name, additionalViewData:new
                                                                            {
                                                                                htmlAttributes = new
                                                                                                 {
                                                                                                     @class = "form-control",
                                                                                                     maxlength = 100
                                                                                                 }
                                                                            })
                    @Html.ValidationMessageFor(model => model.Name, validationMessage:"", htmlAttributes:new
                                                                                                         {
                                                                                                             @class = "text-danger"
                                                                                                         })
                </div>
                <div class="col-md-1">
                    <button class="btn btn-info btn-sm" tabindex="-1" data-placement="top" data-toggle="tooltip" title="The Industry sees this Name and Description. It should describe the contents of the group." type="button">
                        <i class="fa fa-lg fa-info-circle"></i>
                    </button>
                </div>

                @Html.LabelFor(model => model.IsActive, htmlAttributes:new
                                                                       {
                                                                           @class = "control-label col-md-1"
                                                                       })
                <div class="col-md-1">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes:new
                                                                          {
                                                                              @class = "control-label col-md-2"
                                                                          })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Description, additionalViewData:new
                                                                                   {
                                                                                       htmlAttributes = new
                                                                                                        {
                                                                                                            @class = "form-control",
                                                                                                            rows = "3",
                                                                                                            maxlength = 500
                                                                                                        }
                                                                                   })
                </div>
            </div>
        </section>
    </div>

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Parameters</h3>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        <div class="box-body box-collapse collapse in">

            <div class="col-md-6">
                <strong>Available</strong>
                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="availableParameterTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th class="never">Id</th>
                            <th>Parameter</th>
                            <th style="width: 60px">Add</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var parameter in Model.AvailableParameters)
                        {
                            <tr>
                                <td>@parameter.Id</td>
                                <td>@parameter.Name</td>
                                <td>
                                    <button class="btn btn-primary btn-sm" id="btnAddParameter">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="col-md-6">
                <strong>Selected</strong>

                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="selectedParameterTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th class="never">Id</th>
                            <th>Parameter</th>
                            <th style="width: 60px">Remove</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var parameter in Model.Parameters)
                        {
                            <tr>
                                <td>@parameter.Id</td>
                                <td>@parameter.Name</td>
                                <td>
                                    <button class="btn btn-danger btn-sm" id="btnRemoveParameter">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document)
            .ready(function()
            {
                $('#availableParameterTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": 1 }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-primary btn-sm' id='btnAddParameter'><i class='fa fa-plus'></i></button>"
                                    , "targets": 2
                                }
                            ]
                            , "ordering": true
                            , "order": [[1, 'asc']]
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Parameter..."
                                , "zeroRecords": "No parameters match your search."
                                , "emptyTable": "No parameters are available for selection."
                            }
                        }
                    );

                $('#selectedParameterTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": 1 }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-danger btn-sm' id='btnRemoveParameter'><i class='fa fa-minus'></i></button>"
                                    , "targets": 2
                                }
                            ]
                            , "ordering": true
                            , "order": [[1, 'asc']]
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Parameter..."
                                , "zeroRecords": "No parameters match your search."
                                , "emptyTable": "No parameters are selected."
                            }
                        }
                    );

                $("#LinkoExchangeForm")
                    .submit(function(e)
                    {
                        var selectedParameters = [];
                        try
                        {
                            $('#selectedParameterTable')
                                .DataTable()
                                .rows()
                                .data()
                                .each(function(d)
                                {
                                    var parameterViewModel = {};
                                    parameterViewModel.Id = d[0];
                                    parameterViewModel.Name = d[1];
                                    selectedParameters.push(parameterViewModel);
                                });
                            console.debug(selectedParameters.length);
                            $("#SelectedParameters").val(JSON.stringify(selectedParameters));

                            return true;
                        }
                        catch (err)
                        {
                            alert(err);
                            return false;
                        }
                    });
            });

        $(document)
            .on('click'
                , "button[id^='btnAddParameter']"
                , function()
                {
                    var tableMoveFrom = $('#availableParameterTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#selectedParameterTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([data[0], data[1]])
                        .draw()
                        .node();

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();

                    $(rowNode).css('color', 'green');
                });

        $(document)
            .on('click'
                , "button[id^='btnRemoveParameter']"
                , function()
                {
                    var tableMoveFrom = $('#selectedParameterTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#availableParameterTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([data[0], data[1]])
                        .draw()
                        .node();

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();

                    $(rowNode).css('color', 'green');
                });
    </script>
}