@model Linko.LinkoExchange.Web.ViewModels.Authority.IndustryUserViewModel

@{
    ViewBag.Title = "User Details";
}

<section>
    <ol class="breadcrumb">
        <li>
            <a href="#" onclick="location.href = '@Url.Action(actionName:"Index", controllerName:"Authority")'"><i class=""></i> Home </a>
        </li>
        <li>
            <a href="#" onclick="location.href = '@Url.Action(actionName:"Industries", controllerName:"Authority")'"><i class=""></i> Industries </a>
        </li>
        <li>
            <a href="#" onclick="location.href = '@Url.Action(actionName:"IndustryDetails", controllerName:"Authority", routeValues:new {id = Model.IId})'"><i class=""></i> Details </a>
        </li>
        <li>
            <a href="#" onclick="location.href = '@Url.Action(actionName:"IndustryUsers", controllerName:"Authority", routeValues:new {id = Model.IId})'"><i class=""></i> Users </a>
        </li>
        <li class="active">User Details</li>
    </ol>
</section>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">User Information</h3>
            <div class="box-tools pull-right">
                <div class="pull-right">
                    @if (!Model.IsInternalAccount || Model.AccountLocked)
                    {
                        <input class="btn btn-primary btn-sm" data-target="#IndustryUserLockUnLockModal" data-toggle="modal" type="button" value="@Model.AccountLockedButtonText" />
                    }
                    @*<input type="button" value="@Model.StatusButtonText" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#ChangeStatusModal" />*@
                    @if (!Model.IsInternalAccount)
                    {
                        <input class="btn btn-primary btn-sm" data-target="#resetModal" data-toggle="modal" type="button" value="Reset" />
                    }
                </div>
            </div>
        </div>

        <div aria-labelledby="Lock/Unlock Industry User" class="col-md-12 fade modal modal-info" id="IndustryUserLockUnLockModal" role="dialog" tabindex="-1">
            <div class="modal-dialog" role="document">
                <div class="alert alert-dismissible alert-info modal-content">
                    <button aria-label="Close" class="close" data-dismiss="modal" type="button">&times;</button>
                    <h4 class="box-title">@(Model.AccountLocked ? "Unlock User" : "Lock User")</h4>

                    <div class="form-horizontal">
                        <p>
                            @(Model.AccountLocked ? "If you unlock the user, then the user will be able to log into LinkoExchange." : "If you lock the user, then the user will no longer be able to log into any LinkoExchange Portal.")<br />
                            @(Model.AccountLocked ? "Do you want to unlock the user?" : "Do you want to lock the user?")<br />
                        </p>
                        <div class="form-group">
                            <div class="pull-right">
                                <input type="submit" value="Yes" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName:"IndustryUserLockUnLock", controllerName:"Authority")" formmethod="post" />
                                <button aria-label="Close" class="btn btn-primary btn-sm" data-dismiss="modal" type="button">No</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <section class="box-body form-horizontal">

            @Html.ValidationSummary(excludePropertyErrors:true, message:Message.ValidationSummaryHeaderText, htmlAttributes:new
                                                                                                                            {
                                                                                                                                @class = "alert alert-danger"
                                                                                                                            })

            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-dismissible alert-success">
                    <button aria-hidden="true" class="close" data-dismiss="alert" type="button">&times;</button>
                    <h5>
                        <i class="fa fa-check icon"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
                } 
            
            @*<div class="col-md-12 modal modal-info fade" id="ChangeStatusModal" tabindex="-1" role="dialog" aria-labelledby="ChangeStatusModalLabel">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content alert alert-info alert-dismissible">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">&times;</button>

                            @if (@Model.Status)
                            {
                                <h4 class="box-title">Disable User?</h4>

                            }
                            else
                            {
                                <h4 class="box-title">Enable User?</h4>
                            }

                            <section>
                                <p>
                                    @if (@Model.Status)
                                    {
                                        <span>User will no longer be able to log into industry portal.</span>
                                    }
                                    else
                                    {
                                        <span>User will be able to log into industry portal.</span>
                                    }
                                </p>
                            </section>
                            <div>
                                <div class="form-group">
                                    <div class="pull-right">
                                        <button type="submit" class="btn btn-sm btn-primary"
                                                formaction="@Url.Action(actionName: "IndustryUserChangeStatus", controllerName: "Authority")" formmethod="post">
                                            Yes
                                        </button>
                                        <button type="button" class="btn btn-sm btn-primary" data-dismiss="modal" aria-label="Close">No</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@<div aria-labelledby="resetModalLabel" class="col-md-12 fade modal modal-info" id="resetModal" role="dialog" tabindex="-1">
                <div class="modal-dialog" role="document">
                    <div class="alert alert-dismissible alert-info modal-content">
                        <button aria-label="Close" class="close" data-dismiss="modal" type="button">&times;</button>
                        <h4 class="box-title">Reset User Account</h4>

                        <section>
                            <p>
                                User will be required to re-register before they can log into LinkoExchange.
                                What email should be used for re-registration?
                            </p>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.ResetEmail, additionalViewData:new
                                                                                                  {
                                                                                                      htmlAttributes = new
                                                                                                                       {
                                                                                                                           @class = "form-control"
                                                                                                                       }
                                                                                                  })

                                    @Html.ValidationMessageFor(model => model.ResetEmail, validationMessage:"", htmlAttributes:new
                                                                                                                               {
                                                                                                                                   @class = "text-red"
                                                                                                                               })
                                </div>
                            </div>
                        </section>
                        <div>
                            <div class="form-group">
                                <div class="pull-right">
                                    <button type="submit" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName:"IndustryUserReset", controllerName:"Authority")" formmethod="post">
                                        Reset
                                    </button>
                                    <button aria-label="Close" class="btn btn-primary btn-sm" data-dismiss="modal" type="button">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @Html.HiddenFor(model => model.IId)
            @Html.HiddenFor(model => model.PId)
            @Html.HiddenFor(model => model.ResetEmail)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes:new
                                                                        {
                                                                            @class = "control-label col-md-2"
                                                                        })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FirstName, additionalViewData:new
                                                                                 {
                                                                                     htmlAttributes = new
                                                                                                      {
                                                                                                          @class = "form-control",
                                                                                                          @readonly = "readonly"
                                                                                                      }
                                                                                 })
                </div>

                @Html.LabelFor(model => model.LastName, htmlAttributes:new
                                                                       {
                                                                           @class = "control-label col-md-2"
                                                                       })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastName, additionalViewData:new
                                                                                {
                                                                                    htmlAttributes = new
                                                                                                     {
                                                                                                         @class = "form-control",
                                                                                                         @readonly = "readonly"
                                                                                                     }
                                                                                })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes:new
                                                                          {
                                                                              @class = "control-label col-md-2"
                                                                          })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneNumber, additionalViewData:new
                                                                                   {
                                                                                       htmlAttributes = new
                                                                                                        {
                                                                                                            @class = "form-control",
                                                                                                            @readonly = "readonly"
                                                                                                        }
                                                                                   })
                </div>

                @Html.LabelFor(model => model.PhoneExt, htmlAttributes:new
                                                                       {
                                                                           @class = "control-label col-md-2"
                                                                       })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneExt, additionalViewData:new
                                                                                {
                                                                                    htmlAttributes = new
                                                                                                     {
                                                                                                         @class = "form-control",
                                                                                                         @readonly = "readonly"
                                                                                                     }
                                                                                })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes:new
                                                                    {
                                                                        @class = "control-label col-md-2"
                                                                    })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Email, additionalViewData:new
                                                                             {
                                                                                 htmlAttributes = new
                                                                                                  {
                                                                                                      @class = "form-control",
                                                                                                      @readonly = "readonly"
                                                                                                  }
                                                                             })
                </div>

                @Html.LabelFor(model => model.DateRegistered, htmlAttributes:new
                                                                             {
                                                                                 @class = "control-label col-md-2"
                                                                             })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.DateRegistered, additionalViewData:new
                                                                                      {
                                                                                          htmlAttributes = new
                                                                                                           {
                                                                                                               @class = "form-control",
                                                                                                               @readonly = "readonly"
                                                                                                           }
                                                                                      })
                </div>
            </div>

            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes:new
                                                                     {
                                                                         @class = "control-label col-md-2"
                                                                     })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.StatusText, additionalViewData:new
                                                                                  {
                                                                                      htmlAttributes = new
                                                                                                       {
                                                                                                           @class = "form-control",
                                                                                                           @readonly = "readonly"
                                                                                                       }
                                                                                  })
                    @Html.HiddenFor(model => model.Status)
                </div>

                @Html.LabelFor(model => model.AccountLocked, htmlAttributes:new
                                                                            {
                                                                                @class = "control-label col-md-2"
                                                                            })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AccountLockedText, additionalViewData:new
                                                                                         {
                                                                                             htmlAttributes = new
                                                                                                              {
                                                                                                                  @class = "form-control",
                                                                                                                  @readonly = "readonly"
                                                                                                              }
                                                                                         })
                    @Html.HiddenFor(model => model.AccountLocked)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleText, htmlAttributes:new
                                                                       {
                                                                           @class = "control-label col-md-2"
                                                                       })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.RoleText, additionalViewData:new
                                                                                {
                                                                                    htmlAttributes = new
                                                                                                     {
                                                                                                         @class = "form-control",
                                                                                                         @readonly = "readonly"
                                                                                                     }
                                                                                })
                </div>

                @Html.LabelFor(model => model.IsSignatory, htmlAttributes:new
                                                                          {
                                                                              @class = "control-label col-md-2"
                                                                          })
                <div class="col-md-4">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsSignatory)
                    </div>
                </div>
            </div>

        </section>
        <div class="box-footer">
            <div class="form-group">
                <input type="submit" id="btnSaveUserDetails" value="Save" class="btn btn-primary btn-sm pull-right" formaction="@Url.Action(actionName:"IndustryUserUpdateSignatoryStatus", controllerName:"Authority")" formmethod="post" />
                
                @if (Model.AccountLocked)
                {
                    <script>
                        $("#btnSaveUserDetails")
                            .prop('disabled', true)
                            .attr('title', 'Signatory rights cannot be changed because the user locked.');
                    </script>
                }
                
                @if (Model.AccountResetRequired) //if user is both locked AND reset, choose this message
                {
                    <script>
                        $("#btnSaveUserDetails")
                            .prop('disabled', true)
                            .attr('title', 'Signatory rights cannot be changed because the user has not completed their registration reset.');
                    </script>
                }
            </div>
        </div>
    </div>

    <div class="box box-primary collapsed-box">
        <div class="box-header with-border">
            <h3 class="box-title">Security Questions</h3>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-plus"></i>
                </button>
            </div>
        </div>
        <section class="box-body form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.SecurityQuestion1, htmlAttributes:new
                                                                                {
                                                                                    @class = "control-label col-md-2"
                                                                                })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SecurityQuestion1, additionalViewData:new
                                                                                         {
                                                                                             htmlAttributes = new
                                                                                                              {
                                                                                                                  @class = "form-control",
                                                                                                                  @readonly = "readonly"
                                                                                                              }
                                                                                         })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Answer1, htmlAttributes:new
                                                                      {
                                                                          @class = "control-label col-md-2"
                                                                      })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Answer1, additionalViewData:new
                                                                               {
                                                                                   htmlAttributes = new
                                                                                                    {
                                                                                                        @class = "form-control",
                                                                                                        @readonly = "readonly"
                                                                                                    }
                                                                               })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SecurityQuestion2, htmlAttributes:new
                                                                                {
                                                                                    @class = "control-label col-md-2"
                                                                                })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SecurityQuestion2, additionalViewData:new
                                                                                         {
                                                                                             htmlAttributes = new
                                                                                                              {
                                                                                                                  @class = "form-control",
                                                                                                                  @readonly = "readonly"
                                                                                                              }
                                                                                         })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Answer2, htmlAttributes:new
                                                                      {
                                                                          @class = "control-label col-md-2"
                                                                      })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Answer2, additionalViewData:new
                                                                               {
                                                                                   htmlAttributes = new
                                                                                                    {
                                                                                                        @class = "form-control",
                                                                                                        @readonly = "readonly"
                                                                                                    }
                                                                               })
                </div>
            </div>
        </section>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}