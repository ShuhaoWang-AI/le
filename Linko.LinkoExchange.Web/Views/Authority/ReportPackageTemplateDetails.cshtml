@model Linko.LinkoExchange.Web.ViewModels.Shared.ReportPackageTemplateViewModel

@{
    ViewBag.Title = "Report Package Template";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section>
        <ol class="breadcrumb">
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"Index", controllerName:"Authority")'"><i class=""></i> Home </a>
            </li>
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"ReportPackageTemplates", controllerName:"Authority")'"><i class=""></i> Report Package Templates </a>
            </li>
            <li class="active">Details</li>
        </ol>
    </section>

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">
                Report Details
            </h3>

            <div class="box-tools pull-right">
                @if (!ViewBag.Satus.Equals("ViewOnly"))
                {
                    ViewBag.PostURL = Url.Action(actionName:"NewReportPackageTemplateDetails", controllerName:"Authority");

                    <input class="btn btn-primary btn-sm" id="btnSave" type="button" value="Save" />

                    if (!ViewBag.Satus.Equals("New"))
                    {
                        ViewBag.PostURL = Url.Action(actionName:"ReportPackageTemplateDetails", controllerName:"Authority");

                        <input class="btn btn-primary btn-sm" data-target="#DeleteReportPackageTemplateModal" data-toggle="modal" type="button" value="Delete" />
                    }
                }

                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>

        <section class="box-body form-horizontal">
            @Html.ValidationSummary(excludePropertyErrors:true, message:Message.ValidationSummaryHeaderText, htmlAttributes:new
                                                                                                                            {
                                                                                                                                @class = "alert alert-danger"
                                                                                                                            })
            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-dismissible alert-success">
                    <button aria-hidden="true" class="close" data-dismiss="alert" type="button">&times;</button>
                    <h5>
                        <i class="fa fa-check icon"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            <div aria-labelledby="DeleteReportPackageTemplateModalLabel" class="col-md-12 fade modal modal-info" id="DeleteReportPackageTemplateModal" role="dialog" tabindex="-1">
                <div class="modal-dialog" role="document">
                    <div class="alert alert-dismissible alert-info modal-content">
                        <button aria-label="Close" class="close" data-dismiss="modal" type="button">&times;</button>
                        <h4 class="box-title">Delete Report Package Template</h4>

                        <div>
                            <p>
                                Deleting this Report Package Template will permanently remove it from the system and it will no longer be available to use by an Industry. Drafts and previously submitted Reports will not be affected.
                                Do you want to delete this Report Package Template?<br />
                            </p>
                            <div class="form-group">
                                <div class="pull-right">
                                    <button type="submit" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName:"DeleteReportPackageTemplate", controllerName:"Authority", routeValues:new {id = Model.Id})" formmethod="post">
                                        Yes
                                    </button>
                                    <button aria-label="Close" class="btn btn-primary btn-sm" data-dismiss="modal" type="button">No</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.ShowSampleResults)
                @Html.HiddenFor(model => model.IsSubmissionBySignatoryRequired)
                @Html.LabelFor(model => model.Name, htmlAttributes:new
                                                                   {
                                                                       @class = "control-label col-md-2 required"
                                                                   })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Name, additionalViewData:new
                                                                            {
                                                                                htmlAttributes = new
                                                                                                 {
                                                                                                     @class = "form-control",
                                                                                                     maxlength = 100
                                                                                                 }
                                                                            })
                    @Html.ValidationMessageFor(model => model.Name, validationMessage:"", htmlAttributes:new
                                                                                                         {
                                                                                                             @class = "text-danger"
                                                                                                         })
                </div>
                <div class="col-md-1">
                    <button class="btn btn-info btn-sm" data-placement="top" data-toggle="tooltip" title="The Industry sees this Name and Description. It should describe the report." type="button">
                        <i class="fa fa-info-circle"></i>
                    </button>
                </div>

                @Html.LabelFor(model => model.IsActive, htmlAttributes:new
                                                                       {
                                                                           @class = "control-label col-md-1"
                                                                       })
                <div class="col-md-1">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes:new
                                                                          {
                                                                              @class = "control-label col-md-2"
                                                                          })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Description, additionalViewData:new
                                                                                   {
                                                                                       htmlAttributes = new
                                                                                                        {
                                                                                                            @class = "form-control",
                                                                                                            rows = "3",
                                                                                                            maxlength = 100
                                                                                                        }
                                                                                   })
                </div>
            </div>

            <hr />

            <div class="form-group">


                @Html.LabelFor(model => model.EffectiveDateTimeLocal, htmlAttributes:new
                                                                                     {
                                                                                         @class = "control-label col-md-2 required"
                                                                                     })

                <div class="col-sm-4">
                    @(Html.Kendo().DatePicker()
                          .Name(componentName:"dEffectiveDateTimeLocal")
                          .Value(date:Model.EffectiveDateTimeLocal)
                          .Format(format:"D")
                          .HtmlAttributes(attributes:new
                                                     {
                                                         style = "width:210px;"
                                                     }))

                </div>
                <div>
                    <button class="btn btn-info btn-sm" data-placement="top" data-toggle="tooltip" title="When will the Industry start seeing and using this template?" type="button">
                        <i class="fa fa-info-circle"></i>
                    </button>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CtsEventTypeId, htmlAttributes:new
                                                                             {
                                                                                 @class = "control-label col-md-2"
                                                                             })

                <div class="col-sm-4">
                    @Html.DropDownList(name:"CtsEventTypeId", selectList:Model.AvailableCtsEventTypes, htmlAttributes:new
                                                                                                                      {
                                                                                                                          @class = "form-control"
                                                                                                                      })

                    @Html.ValidationMessageFor(model => model.CtsEventTypeName, validationMessage:"", htmlAttributes:new
                                                                                                                     {
                                                                                                                         @class = "text-danger"
                                                                                                                     })
                </div>
                <div>
                    <button class="btn btn-info btn-sm" data-placement="top" data-toggle="tooltip" title="The Report Package Template must also have a CTS Event Type assigned for this Element to show up in LinkoCTS." type="button">
                        <i class="fa fa-info-circle"></i>
                    </button>
                </div>
            </div>
        </section>
    </div>

    /////////////////////////////////////    Samples And Results Types   ////////////////////////////////////////////

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Samples And Results</h3>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        <div class="box-body box-collapse collapse in">

            <div class="col-md-6">
                <strong>Available</strong>
                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="availableSamplesAndResultsTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th class="never">Id</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th style="width: 25px">Add</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var samplesAndResults in Model.AvailableSamplesAndResultsTypes)
                        {
                            <tr>
                                <td>@samplesAndResults.Id</td>
                                <td>@samplesAndResults.Name</td>
                                <td>@samplesAndResults.Description</td>
                                <td>
                                    <button class="btn btn-primary btn-sm" disabled="disabled" id="btnAddSamplesAndResults" type="button">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="col-md-6">
                <strong class="box-title">Selected</strong>

                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="selectedSamplesAndResultsTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th style="width: 30px"></th>
                            <th class="never">Id</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th style="width: 60px">Remove</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var samplesAndResults in Model.SamplesAndResultsTypes)
                        {
                            <tr>
                                <td>
                                    <span class="btn btn-sm handler">&nbsp;</span>
                                </td>
                                <td>@samplesAndResults.Id</td>
                                <td>@samplesAndResults.Name</td>
                                <td>@samplesAndResults.Description</td>
                                <td>
                                    <button class="btn btn-danger btn-sm" disabled="disabled" id="btnRemoveSamplesAndResults" type="button">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @(Html.Kendo().Sortable()
                  .For(selector:"#selectedSamplesAndResultsTable")
                  .Filter(selector:"tbody > tr")
                  .Cursor(cursor:"move")
                  .Handler(selector:".handler")
                  .HintHandler(handler:"noHint")
                  .PlaceholderHandler(handler:"placeholder")
                  .ContainerSelector(selector:"#selectedSamplesAndResultsTable tbody")
                  )
        </div>
    </div>

    /////////////////////////////////////    Attachment Types   ////////////////////////////////////////////

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Attachments</h3>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        <div class="box-body box-collapse collapse in">
            <div class="col-md-12"><h5>Select the attachments that should be submitted with the report.</h5></div>

            <div class="col-md-6">
                <strong>Available</strong>
                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="availableAttachmentTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th class="never">Id</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th style="width: 25px">Add</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var attachment in Model.AvailableAttachmentTypes)
                        {
                            <tr>
                                <td>@attachment.Id</td>
                                <td>@attachment.Name</td>
                                <td>@attachment.Description</td>
                                <td>
                                    <button class="btn btn-primary btn-sm" id="btnAddAttachment" type="button">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="col-md-6">
                <strong>Selected</strong>

                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="selectedAttachmentTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th style="width: 30px"></th>
                            <th class="never">Id</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th style="width: 60px">Remove</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var attachment in Model.AttachmentTypes)
                        {
                            <tr>
                                <td>
                                    <span class="btn btn-sm handler">&nbsp;</span>
                                </td>
                                <td>@attachment.Id</td>
                                <td>@attachment.Name</td>
                                <td>@attachment.Description</td>
                                <td>
                                    <button class="btn btn-danger btn-sm" id="btnRemoveAttachment" type="button">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @(Html.Kendo().Sortable()
                  .For(selector:"#selectedAttachmentTable")
                  .Filter(selector:"tbody > tr")
                  .Cursor(cursor:"move")
                  .Handler(selector:".handler")
                  .HintHandler(handler:"hint")
                  .PlaceholderHandler(handler:"placeholder")
                  .ContainerSelector(selector:"#selectedAttachmentTable tbody")
                  )
        </div>
    </div>

    /////////////////////////////////////    Certification Types   ////////////////////////////////////////////

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Certifications</h3>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        <div class="box-body box-collapse collapse in">
            
            <div class="col-md-12"><h5>Select the certifications that must be agreed to when submitting the report.</h5></div>

            <div class="col-md-6">
                <strong>Available</strong>
                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="availableCertificationTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th class="never">Id</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th style="width: 25px">Add</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var certification in Model.AvailableCertificationTypes)
                        {
                            <tr>
                                <td>@certification.Id</td>
                                <td>@certification.Name</td>
                                <td>@certification.Description</td>
                                <td>
                                    <button class="btn btn-primary btn-sm" id="btnAddCertification" type="button">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="col-md-6">
                <strong>Selected</strong>

                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="selectedCertificationTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th style="width: 30px"></th>
                            <th class="never">Id</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th style="width: 60px">Remove</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var certification in Model.CertificationTypes)
                        {
                            <tr>
                                <td>
                                    <span class="btn btn-sm handler">&nbsp;</span>
                                </td>
                                <td>@certification.Id</td>
                                <td>@certification.Name</td>
                                <td>@certification.Description</td>
                                <td>
                                    <button class="btn btn-danger btn-sm" id="btnRemoveCertification" type="button">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @(Html.Kendo().Sortable()
                  .For(selector:"#selectedCertificationTable")
                  .Filter(selector:"tbody > tr")
                  .Cursor(cursor:"move")
                  .Handler(selector:".handler")
                  .HintHandler(handler:"hint")
                  .PlaceholderHandler(handler:"placeholder")
                  .ContainerSelector(selector:"#selectedCertificationTable tbody")
                  )

        </div>
    </div>

    /////////////////////////////////////    Assign Industries   ////////////////////////////////////////////

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Assign Industries</h3>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        <div class="box-body box-collapse collapse in">
            
            <div class="col-md-12"><h5>Select the Industries that will be able to submit this report.</h5></div>

            <div class="col-md-6">
                <strong>Available</strong>
                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="availableIndustryTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th class="never">Id</th>
                            <th>No</th>
                            <th>Name</th>
                            <th>Address</th>
                            <th>Classification</th>
                            <th style="width: 25px">Add</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var industry in Model.AvailableReportPackageTemplateAssignments)
                        {
                            <tr>
                                <td>@industry.Id</td>
                                <td>@industry.ReferenceNumber</td>
                                <td>@industry.IndustryName</td>
                                <td>@industry.Address</td>
                                <td>@industry.Classification</td>
                                <td>
                                    <button class="btn btn-primary btn-sm" id="btnAddIndustry" type="button">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="col-md-6">
                <strong>Selected</strong>

                <table class="dataTable table table-bordered table-condensed table-hover table-striped text-center" id="selectedIndustryTable">
                    <thead>
                        <tr>
                            @*if you add or reorder any column then need to update the JavaScripts bellow*@
                            <th class="never">Id</th>
                            <th>No</th>
                            <th>Name</th>
                            <th>Address</th>
                            <th>Classification</th>
                            <th style="width: 60px">Remove</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var industry in Model.ReportPackageTemplateAssignments)
                        {
                            <tr>
                                <td>@industry.Id</td>
                                <td>@industry.ReferenceNumber</td>
                                <td>@industry.IndustryName</td>
                                <td>@industry.Address</td>
                                <td>@industry.Classification</td>
                                <td>
                                    <button class="btn btn-danger btn-sm" id="btnRemoveIndustry" type="button">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        var noHint = $.noop;

        function hint(element)
        {
            return element.clone().addClass("hint");
        }

        function placeholder(element)
        {
            return element.clone().addClass("k-state-hover").css("opacity", 0.65);
        }

        $(document)
            .ready(function()
            {
                $('#availableSamplesAndResultsTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": [1, 2] }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-primary btn-sm' id='btnAddSamplesAndResults' disabled='disabled'><i class='fa fa-plus'></i></button>"
                                    , "targets": 3
                                }
                            ]
                            , "searching": false
                            , "ordering": true
                            , "order": [[1, 'asc']]
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Sample And Result Type..."
                                , "zeroRecords": "No sample and result types match your search."
                                , "emptyTable": "No sample and result types are available for selection."
                            }
                        }
                    );

                $('#selectedSamplesAndResultsTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": [2, 3] }
                                , {
                                    "defaultContent":
                                        "<span class='btn btn-sm handler'>&nbsp;</span>"
                                    , "targets": 0
                                }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-danger btn-sm' id='btnRemoveSamplesAndResults' disabled='disabled'><i class='fa fa-minus'></i></button>"
                                    , "targets": 4
                                }
                            ]
                            , "searching": false
                            , "ordering": false
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Sample And Result Type..."
                                , "zeroRecords": "No sample and result types match your search."
                                , "emptyTable": "No sample and result types are selected."
                            }
                        }
                    );

                $('#availableAttachmentTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": [1, 2] }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-primary btn-sm' id='btnAddAttachment'><i class='fa fa-plus'></i></button>"
                                    , "targets": 3
                                }
                            ]
                            , "searching": false
                            , "ordering": true
                            , "order": [[1, 'asc']]
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Attachment..."
                                , "zeroRecords": "No attachments match your search."
                                , "emptyTable": "No attachments are available for selection."
                            }
                        }
                    );

                $('#selectedAttachmentTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": [2, 3] }
                                , {
                                    "defaultContent":
                                        "<span class='btn btn-sm handler'>&nbsp;</span>"
                                    , "targets": 0
                                }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-danger btn-sm' id='btnRemoveAttachment'><i class='fa fa-minus'></i></button>"
                                    , "targets": 4
                                }
                            ]
                            , "searching": false
                            , "ordering": false
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Attachment..."
                                , "zeroRecords": "No attachments match your search."
                                , "emptyTable": "No attachments are selected."

                            }
                        }
                    );

                $('#availableCertificationTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": [1, 2] }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-primary btn-sm' id='btnAddCertification'><i class='fa fa-plus'></i></button>"
                                    , "targets": 3
                                }
                            ]
                            , "searching": false
                            , "ordering": true
                            , "order": [[1, 'asc']]
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Certification..."
                                , "zeroRecords": "No certifications match your search."
                                , "emptyTable": "No certifications are available for selection."
                            }
                        }
                    );

                $('#selectedCertificationTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": [2, 3] }
                                , {
                                    "defaultContent":
                                        "<span class='btn btn-sm handler'>&nbsp;</span>"
                                    , "targets": 0
                                }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-danger btn-sm' id='btnRemoveCertification'><i class='fa fa-minus'></i></button>"
                                    , "targets": 4
                                }
                            ]
                            , "searching": false
                            , "ordering": false
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Certification..."
                                , "zeroRecords": "No certifications match your search."
                                , "emptyTable": "No certifications are selected."
                            }
                        }
                    );

                $('#availableIndustryTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": [1, 2, 3, 4] }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-primary btn-sm' id='btnAddIndustry'><i class='fa fa-plus'></i></button>"
                                    , "targets": 5
                                }
                            ]
                            , "ordering": true
                            , "order": [[1, 'asc']]
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Industry..."
                                , "zeroRecords": "No industries match your search."
                                , "emptyTable": "No industries are available for selection."
                            }
                        }
                    );

                $('#selectedIndustryTable')
                    .DataTable(
                        {
                            "columnDefs": [
                                { "searchable": true, "targets": [1, 2, 3, 4] }
                                , {
                                    "defaultContent":
                                        "<button class='btn btn-danger btn-sm' id='btnRemoveIndustry'><i class='fa fa-minus'></i></button>"
                                    , "targets": 5
                                }
                            ]
                            , "ordering": true
                            , "order": [[1, 'asc']]
                            , "paging": false
                            , "info": false
                            , "responsive": true
                            , "autoWidth": false
                            , "processing": true
                            , "stateSave": false
                            , "language": {
                                "search": ""
                                , "searchPlaceholder": "Search Industry..."
                                , "zeroRecords": "No industries match your search."
                                , "emptyTable": "No industries are selected."
                            }
                        }
                    );
            });

        $(document)
            .on('click'
                , "button[id^='btnAddSamplesAndResults']"
                , function()
                {
                    var tableMoveFrom = $('#availableSamplesAndResultsTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#selectedSamplesAndResultsTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([null, data[0], data[1], data[2]])
                        .draw()
                        .node();

                    $(rowNode).css('color', 'green');

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();
                });

        $(document)
            .on('click'
                , "button[id^='btnRemoveSamplesAndResults']"
                , function()
                {
                    var tableMoveFrom = $('#selectedSamplesAndResultsTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#availableSamplesAndResultsTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([data[1], data[2], data[3]])
                        .draw()
                        .node();

                    $(rowNode).css('color', 'green');

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();
                });

        $(document)
            .on('click'
                , "button[id^='btnAddAttachment']"
                , function()
                {
                    var tableMoveFrom = $('#availableAttachmentTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#selectedAttachmentTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([null, data[0], data[1], data[2]])
                        .draw()
                        .node();

                    $(rowNode).css('color', 'green');

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();
                });

        $(document)
            .on('click'
                , "button[id^='btnRemoveAttachment']"
                , function()
                {
                    var tableMoveFrom = $('#selectedAttachmentTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#availableAttachmentTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([data[1], data[2], data[3]])
                        .draw()
                        .node();

                    $(rowNode).css('color', 'green');

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();
                });

        $(document)
            .on('click'
                , "button[id^='btnAddCertification']"
                , function()
                {
                    var tableMoveFrom = $('#availableCertificationTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#selectedCertificationTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([null, data[0], data[1], data[2]])
                        .draw()
                        .node();

                    $(rowNode).css('color', 'green');

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();
                });

        $(document)
            .on('click'
                , "button[id^='btnRemoveCertification']"
                , function()
                {
                    var tableMoveFrom = $('#selectedCertificationTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#availableCertificationTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([data[1], data[2], data[3]])
                        .draw()
                        .node();

                    $(rowNode).css('color', 'green');

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();
                });

        $(document)
            .on('click'
                , "button[id^='btnAddIndustry']"
                , function()
                {
                    var tableMoveFrom = $('#availableIndustryTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#selectedIndustryTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([data[0], data[1], data[2], data[3], data[4]])
                        .draw()
                        .node();

                    $(rowNode).css('color', 'green');

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();
                });

        $(document)
            .on('click'
                , "button[id^='btnRemoveIndustry']"
                , function()
                {
                    var tableMoveFrom = $('#selectedIndustryTable').DataTable();

                    var data = tableMoveFrom.row($(this).parents('tr')).data();

                    var tableMoveTo = $('#availableIndustryTable').DataTable();
                    var rowNode = tableMoveTo
                        .row.add([data[0], data[1], data[2], data[3], data[4]])
                        .draw()
                        .node();

                    $(rowNode).css('color', 'green');

                    tableMoveFrom
                        .row($(this).parents('tr'))
                        .remove()
                        .draw();
                });

        $("#btnSave")
            .on("click"
                , function()
                {
                    var selectedSamplesAndResults = [];
                    $('#selectedSamplesAndResultsTable')
                        .DataTable()
                        .rows()
                        .data()
                        .each(function(value, index)
                        {
                            var reportElementTypeViewModel = {};
                            reportElementTypeViewModel.Id = value[1];
                            reportElementTypeViewModel.Name = value[2];
                            selectedSamplesAndResults.push(reportElementTypeViewModel);
                            console.debug('Data in index: ' + index + ' is: ' + value);
                        });

                    var selectedAttachments = [];
                    $('#selectedAttachmentTable')
                        .DataTable()
                        .rows()
                        .data()
                        .each(function(value, index)
                        {
                            var reportElementTypeViewModel = {};
                            reportElementTypeViewModel.Id = value[1];
                            reportElementTypeViewModel.Name = value[2];
                            selectedAttachments.push(reportElementTypeViewModel);
                            console.debug('Data in index: ' + index + ' is: ' + value);
                        });

                    var selectedCertifications = [];
                    $('#selectedCertificationTable')
                        .DataTable()
                        .rows()
                        .data()
                        .each(function(value, index)
                        {
                            var reportElementTypeViewModel = {};
                            reportElementTypeViewModel.Id = value[1];
                            reportElementTypeViewModel.Name = value[2];
                            selectedCertifications.push(reportElementTypeViewModel);
                            console.debug('Data in index: ' + index + ' is: ' + value);
                        });

                    var selectedIndustries = [];
                    $('#selectedIndustryTable')
                        .DataTable()
                        .rows()
                        .data()
                        .each(function(value, index)
                        {
                            var industryViewModel = {};
                            industryViewModel.Id = value[0];
                            industryViewModel.Name = value[2];
                            selectedIndustries.push(industryViewModel);
                        });


                    var viewModel = {};
                    viewModel.Id = $('#Id').val();
                    viewModel.Name = $('#Name').val();
                    viewModel.Description = $('#Description').val();
                    viewModel.IsActive = $('#IsActive').is(":checked");
                    viewModel.EffectiveDateTimeLocal = $('#dEffectiveDateTimeLocal').val();
                    viewModel.IsSubmissionBySignatoryRequired = $('#IsSubmissionBySignatoryRequired').val();
                    viewModel.ShowSampleResults = $('#ShowSampleResults').val();
                    viewModel.CtsEventTypeId = $('#CtsEventTypeId').val();
                    viewModel.SamplesAndResultsTypes = selectedSamplesAndResults;
                    viewModel.AttachmentTypes = selectedAttachments;
                    viewModel.CertificationTypes = selectedCertifications;
                    viewModel.ReportPackageTemplateAssignments = selectedIndustries;

                    console.debug('----', viewModel);

                    var postUrl = "@ViewBag.PostURL";
                    var token = $("[name='__RequestVerificationToken']").val();
                    viewModel.__RequestVerificationToken = token;

                    $.ajax({
                        type: "POST"
                        , url: postUrl
                        , data: viewModel
                        , success: function(response)
                        {
                            if (response.redirect != null && response.redirect)
                            {
                                window.location.replace(response.newurl);
                            }
                            else
                            {
                                var newDoc = document.open("text/html", "replace");
                                newDoc.write(response);
                                newDoc.close();
                            }
                        }
                        //, error: function()
                        //    {}
                    });
                });
    </script>
}