@model Linko.LinkoExchange.Web.ViewModels.Authority.IndustryViewModel
@using Linko.LinkoExchange.Core.Resources

@{
    ViewBag.Title = @Label.TitleIndustryDetails;
}

@using (Html.BeginForm(actionName: "IndustryDetails", controllerName: "Authority", method: FormMethod.Post, htmlAttributes: new{ @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <section class="">
        <ol class="breadcrumb">
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "Index", controllerName: "Authority")'"><i class=""></i> Home </a></li>
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "Industries", controllerName: "Authority")'"><i class=""></i> Industries </a></li>
            <li class="active">Details</li>
        </ol>
    </section>

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">@Label.BoxTitleIndustryInformation</h3>
            <div class="box-tools pull-right">
                <div class="pull-right">
                    @if (@Model.HasPermissionForEnableDisable)
                    {
                        if (@Model.IsEnabled)
                        {
                            <input type="submit" value="Disable" class="btn btn-sm btn-primary" />
                        }
                        else
                        {
                            <input type="submit" value="Enable" class="btn btn-sm btn-primary" />
                        }
                    }

                    <input type="button" value="Users" class="btn btn-sm btn-primary" 
                           onclick="location.href = '@Url.Action(actionName: "IndustryUsers", controllerName: "Authority", routeValues: new { id = @Model.Id })'" />
                </div>
            </div><!-- /.box-tools -->
        </div>  @*.box-header*@

        <section class="box-body form-horizontal">
                
            @Html.ValidationSummary(excludePropertyErrors: true, message: "", htmlAttributes: new { @class = "alert alert-danger" })
            
            @if (ViewBag.ShowSuccessMessage!= null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-success alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <h5>
                        <i class="icon fa fa-check"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.IsEnabledText, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IsEnabledText, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                    @Html.HiddenFor(model => model.IsEnabled)
                </div>

                @Html.LabelFor(model => model.HasSignatoryText, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.HasSignatoryText, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AssignedTo, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssignedTo, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>

                @Html.LabelFor(model => model.LastSubmission, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.EditorFor(model => model.LastSubmission, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control pull-right datepicker",
                                @disabled = "disabled"
                            }
                        })
                    </div>
                </div>
            </div>

            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.IndustryNo, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.IndustryNo, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>

                @Html.LabelFor(model => model.IndustryName, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IndustryName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneNumber, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>

                @Html.LabelFor(model => model.PhoneExt, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneExt, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.FaxNumber, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FaxNumber, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AddressLine1, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AddressLine2, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.CityName, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.CityName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>

                @Html.LabelFor(model => model.State, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.State, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ZipCode, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @disabled = "disabled"
                        }
                    })
                </div>
            </div>
        </section>@*.box-body*@
    </div><!-- /.box -->

}