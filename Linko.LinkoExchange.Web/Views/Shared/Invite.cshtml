@using Linko.LinkoExchange.Core.Enum
@model Linko.LinkoExchange.Web.ViewModels.Shared.InviteViewModel

@{
    ViewBag.Title = "Invite";
}

<section>
    <ol class="breadcrumb">
        @if (Model.InvitationType == InvitationType.AuthorityToAuthority)
        {
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"Index", controllerName:"Authority")'"><i class=""></i> Home </a>
            </li>
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"AuthorityUsers", controllerName:"Authority")'"><i class=""></i> Users </a>
            </li>
        }
        else if (Model.InvitationType == InvitationType.AuthorityToIndustry)
        {
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"Index", controllerName:"Authority")'"><i class=""></i> Home </a>
            </li>
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"Industries", controllerName:"Authority")'"><i class=""></i> Industries </a>
            </li>
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"IndustryDetails", controllerName:"Authority", routeValues:new {id = Model.OrgRegProgramId})'"><i class=""></i> Details </a>
            </li>
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"IndustryUsers", controllerName:"Authority", routeValues:new {id = Model.OrgRegProgramId})'"><i class=""></i> Users </a>
            </li>
        }
        else if (Model.InvitationType == InvitationType.IndustryToIndustry)
        {
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"Index", controllerName:"Industry")'"><i class=""></i> Home </a>
            </li>
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"IndustryUsers", controllerName:"Industry")'"><i class=""></i> Users </a>
            </li>
        }
        <li class="active">Invite</li>
    </ol>
</section>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.OrgRegProgramId)
    @Html.HiddenFor(model => model.InvitationType)

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Search Email Address</h3>
            <div class="box-tools pull-right">
                <div class="pull-right">
                </div>
            </div>
        </div>

        <section class="box-body form-horizontal">

            @Html.ValidationSummary(excludePropertyErrors:true, message:Message.ValidationSummaryHeaderText, htmlAttributes:new {@class = "alert alert-danger"})

            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-dismissible alert-success">
                    <button aria-hidden="true" class="close" data-dismiss="alert" type="button">&times;</button>
                    <h5>
                        <i class="fa fa-check icon"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            <div id="noUserFoundMessage" style="display: none;">
                <div class="alert alert-info">
                    <h5>
                        <i class="fa fa-check icon"></i>
                        The user does not exist. Enter a first and last name and click the 'Send Invite' button.
                    </h5>
                </div>
            </div>

            <div class="email-field form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes:new
                                                                           {
                                                                               @class = "control-label col-md-2 required"
                                                                           })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.EmailAddress, additionalViewData:new
                                                                                    {
                                                                                        htmlAttributes = new
                                                                                                         {
                                                                                                             @class = "form-control"
                                                                                                         }
                                                                                    })
                    @Html.ValidationMessageFor(model => model.EmailAddress, validationMessage:"", htmlAttributes:new {@class = "text-red"})
                    @Html.HiddenFor(model => model.EmailAddress)
                </div>

            </div>

            <div id="divNameContainer" style="display: none;">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes:new
                                                                            {
                                                                                @class = "control-label col-md-2 required"
                                                                            })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.FirstName, additionalViewData:new
                                                                                     {
                                                                                         htmlAttributes = new
                                                                                                          {
                                                                                                              @class = "form-control"
                                                                                                          }
                                                                                     })
                        @Html.ValidationMessageFor(model => model.FirstName, validationMessage:"", htmlAttributes:new {@class = "text-red"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes:new
                                                                           {
                                                                               @class = "control-label col-md-2 required"
                                                                           })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.LastName, additionalViewData:new
                                                                                    {
                                                                                        htmlAttributes = new
                                                                                                         {
                                                                                                             @class = "form-control"
                                                                                                         }
                                                                                    })
                        @Html.ValidationMessageFor(model => model.LastName, validationMessage:"", htmlAttributes:new {@class = "text-red"})
                    </div>
                </div>
            </div>

        </section>
        <div class="box-footer">
            <div class="form-group pull-right">
                <input class="btn btn-primary btn-sm" id="searchEmailBtn" type="submit" value="Search Email" />
                <input class="btn btn-primary btn-sm" formmethod="post" id="sendInviteBtn" style="display: none;" type="submit" value="Send Invite" />
                <input class="btn btn-primary btn-sm" id="cancelInviteBtn" style="display: none;" type="button" value="Cancel" />
            </div>
        </div>
    </div>

    <div class="box box-primary" id="boxFoundUser" style="display: none;">
        <div class="box-header with-border">
            <h3 class="box-title">Found User</h3>
        </div>

        <section class="box-body form-horizontal">

            @Html.ValidationSummary(excludePropertyErrors:true, message:Message.ValidationSummaryHeaderText, htmlAttributes:new {@class = "alert alert-danger"})

            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-dismissible alert-success">
                    <button aria-hidden="true" class="close" data-dismiss="alert" type="button">&times;</button>
                    <h5>
                        <i class="fa fa-check icon"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            <div>
                <div class="alert alert-danger">
                    <h5>
                        <i class="fa fa-close icon"></i>
                        <span id="foundUserMessage"></span>
                    </h5>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes:new
                                                                        {
                                                                            @class = "control-label col-md-2"
                                                                        })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FirstName, additionalViewData:new
                                                                                 {
                                                                                     htmlAttributes = new
                                                                                                      {
                                                                                                          @class = "form-control",
                                                                                                          @readonly = "readonly"
                                                                                                      }
                                                                                 })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes:new
                                                                       {
                                                                           @class = "control-label col-md-2"
                                                                       })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastName, additionalViewData:new
                                                                                {
                                                                                    htmlAttributes = new
                                                                                                     {
                                                                                                         @class = "form-control",
                                                                                                         @readonly = "readonly"
                                                                                                     }
                                                                                })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BusinessName, htmlAttributes:new
                                                                           {
                                                                               @class = "control-label col-md-2"
                                                                           })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.BusinessName, additionalViewData:new
                                                                                    {
                                                                                        htmlAttributes = new
                                                                                                         {
                                                                                                             @class = "form-control",
                                                                                                             @readonly = "readonly"
                                                                                                         }
                                                                                    })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes:new
                                                                          {
                                                                              @class = "control-label col-md-2"
                                                                          })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneNumber, additionalViewData:new
                                                                                   {
                                                                                       htmlAttributes = new
                                                                                                        {
                                                                                                            @class = "form-control",
                                                                                                            @readonly = "readonly"
                                                                                                        }
                                                                                   })
                </div>
            </div>

        </section>
        <div class="box-footer">
            <div class="form-group pull-right">
                <input class="btn btn-primary btn-sm" formmethod="post" id="foundUserInviteButton" type="submit" value="Send Invite" />
                <input class="btn btn-primary btn-sm" id="cancelInviteBtn" type="button" value="Cancel" />
            </div>
        </div>
    </div>
}
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.OrgRegProgramId)
    @Html.HiddenFor(model => model.InvitationType)
    <div class="box box-primary" id="boxFoundUsers" style="display: none;">
        <div class="box-header with-border">
            <h3 class="box-title">Found Users</h3>
        </div>

        <section class="box-body form-horizontal">

            @Html.ValidationSummary(excludePropertyErrors:true, message:Message.ValidationSummaryHeaderText, htmlAttributes:new {@class = "alert alert-danger"})

            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-dismissible alert-success">
                    <button aria-hidden="true" class="close" data-dismiss="alert" type="button">&times;</button>
                    <h5>
                        <i class="fa fa-check icon"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            <div>
                <div class="alert alert-info">
                    <h5>
                        <i class="fa fa-check icon"></i>
                        <span id="foundUserInDifferentProgramsMessage"></span>
                    </h5>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2 control-label">First Name</label>
                <div class="col-md-4">
                    <input class="form-control single-line text-box valid" data-val="true" id="FoundUser_FirstName" name="FoundUser_FirstName" readonly="readonly" type="text">
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Last Name</label>
                <div class="col-md-4">
                    <input class="form-control single-line text-box valid" data-val="true" id="FoundUser_LastName" name="FoundUser_LastName" readonly="readonly" type="text">
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Organization Name</label>
                <div class="col-md-4">
                    <input class="form-control single-line text-box valid" data-val="true" id="FoundUser_OrganizationName" name="FoundUser_OrganizationName" readonly="readonly" type="text">
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Phone Number</label>
                <div class="col-md-4">
                    <input class="form-control single-line text-box valid" data-val="true" id="FoundUser_PhoneNumber" name="FoundUser_PhoneNumber" readonly="readonly" type="text">
                </div>
            </div>

        </section>
        <div class="box-footer">
            <div class="col-md-6 form-group text-right">
                <input class="btn btn-primary btn-sm" formaction="" formmethod="post" id="sendToExistingInviteBtn" type="submit" value="Send Invite" />
                <input class="btn btn-primary btn-sm" id="cancelInviteBtn" type="button" value="Cancel" />
            </div>
            <div class="col-md-6 form-group"></div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render(paths:"~/bundles/jqueryval")
    @Scripts.Render(paths:"~/bundles/invite")
}