@using Linko.LinkoExchange.Core.Enum

@model Linko.LinkoExchange.Web.ViewModels.Shared.InviteViewModel

@{
    ViewBag.Title = "Invite";
}

<section>
    <ol class="breadcrumb">
        @if (Model.InvitationType == InvitationType.AuthorityToAuthority)
        {
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "Index", controllerName: "Authority")'"><i class=""></i> Home </a></li>
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "AuthorityUsers", controllerName: "Authority")'"><i class=""></i> Users </a></li>
        }
        else if (Model.InvitationType == InvitationType.AuthorityToIndustry)
        {
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "Index", controllerName: "Authority")'"><i class=""></i> Home </a></li>
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "Industries", controllerName: "Authority")'"><i class=""></i> Industries </a></li>
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "IndustryDetails", controllerName: "Authority", routeValues: new { id = Model.OrgRegProgramId })'"><i class=""></i> Details </a></li>
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "IndustryUsers", controllerName: "Authority", routeValues: new { id = Model.OrgRegProgramId })'"><i class=""></i> Users </a></li>
        }
        else if (Model.InvitationType == InvitationType.IndustryToIndustry)
        {
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "Index", controllerName: "Industry")'"><i class=""></i> Home </a></li>
            <li><a href="#" onclick="location.href = '@Url.Action(actionName: "IndustryUsers", controllerName: "Industry")'"><i class=""></i> Users </a></li>
        }
        <li class="active">Invite</li>
    </ol>
</section>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.OrgRegProgramId)
    @Html.HiddenFor(model => model.InvitationType)

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Search Email Address</h3>
            <div class="box-tools pull-right">
                <div class="pull-right">
                </div>
            </div><!-- /.box-tools -->
        </div>  @*.box-header*@

        <section class="box-body form-horizontal">

            @Html.ValidationSummary(excludePropertyErrors: true, message: Message.ValidationSummaryHeaderText, htmlAttributes: new { @class = "alert alert-danger" })
            
            @if (ViewBag.ShowSuccessMessage!= null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-success alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <h5>
                        <i class="icon fa fa-check"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            <div id="noUserFoundMessage" style="display:none;">
                <div class="alert alert-info">
                    <h5>
                        <i class="icon fa fa-check"></i>
                        The user does not exist. Enter a first and last name and click the 'Send Invite' button.
                    </h5>
                </div>
            </div>

            <div class="form-group email-field">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new
                {
                    @class = "control-label col-md-2 required"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.EmailAddress, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-red" })
                    @Html.HiddenFor(model => model.EmailAddress)
                </div>

            </div>

            <div id="divNameContainer" style="display:none;">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new
               {
                   @class = "control-label col-md-2 required"
               })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.FirstName, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control"
                            }
                        })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-red" })
                    </div>
                </div>
                <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new
                   {
                       @class = "control-label col-md-2 required"
                   })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.LastName, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-red" })
                        </div>
                </div>
             </div>
        
        </section>@*.box-body*@
        <div class="box-footer">
            <div class="form-group pull-right" >
                <input type="submit" id="searchEmailBtn" value="Search Email" class="btn btn-sm btn-primary" />
                <input type="submit" id="sendInviteBtn" value="Send Invite" class="btn btn-sm btn-primary" style="display:none;" formmethod="post" />
                <input type="button" id="cancelInviteBtn" value="Cancel" class="btn btn-sm btn-primary" style="display:none;" />
            </div>
        </div><!-- box-footer -->
    </div><!-- /.box -->

    <div id="boxFoundUser" class="box box-primary" style="display:none;">
        <div class="box-header with-border">
            <h3 class="box-title">Found User</h3>
        </div>  @*.box-header*@

        <section class="box-body form-horizontal">

            @Html.ValidationSummary(excludePropertyErrors: true, message: Message.ValidationSummaryHeaderText, htmlAttributes: new { @class = "alert alert-danger" })

            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-success alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <h5>
                        <i class="icon fa fa-check"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }
            
            <div>
                <div class="alert alert-danger">
                    <h5>
                        <i class="icon fa fa-close"></i>
                        <span id="foundUserMessage"></span>
                    </h5>
                </div>
            </div>        

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FirstName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>
            <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new
                    {
                        @class = "control-label col-md-2"
                    })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.LastName, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control",
                           @readonly = "readonly"
                       }
                   })
                    </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BusinessName, htmlAttributes: new
               {
                   @class = "control-label col-md-2"
               })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.BusinessName, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @readonly = "readonly"
                   }
               })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new
               {
                   @class = "control-label col-md-2"
               })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneNumber, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @readonly = "readonly"
                   }
               })
                </div>
            </div>
        
        </section>@*.box-body*@
        <div class="box-footer">
            <div class="form-group pull-right">
                <input id="foundUserInviteButton" type="submit" value="Send Invite" class="btn btn-sm btn-primary" formmethod="post" />
                <input type="button" id="cancelInviteBtn" value="Cancel" class="btn btn-sm btn-primary" />
            </div>
        </div><!-- box-footer -->
    </div>

}
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.OrgRegProgramId)
    @Html.HiddenFor(model => model.InvitationType)
    <div id="boxFoundUsers" class="box box-primary" style="display:none;">
        <div class="box-header with-border">
            <h3 class="box-title">Found Users</h3>
        </div>

        <section class="box-body form-horizontal">

            @Html.ValidationSummary(excludePropertyErrors: true, message: Message.ValidationSummaryHeaderText, htmlAttributes: new { @class = "alert alert-danger" })

            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-success alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <h5>
                        <i class="icon fa fa-check"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }
        
            <div>
                <div class="alert alert-info">
                    <h5>
                        <i class="icon fa fa-check"></i>
                        <span id="foundUserInDifferentProgramsMessage"></span>
                    </h5>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">First Name</label>
                <div class="col-md-4">
                    <input class="form-control text-box single-line valid" data-val="true" id="FoundUser_FirstName" name="FoundUser_FirstName" type="text" readonly="readonly">
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Last Name</label>
                <div class="col-md-4">
                    <input class="form-control text-box single-line valid" data-val="true" id="FoundUser_LastName" name="FoundUser_LastName" type="text" readonly="readonly">
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Organization Name</label>
                <div class="col-md-4">
                    <input class="form-control text-box single-line valid" data-val="true" id="FoundUser_OrganizationName" name="FoundUser_OrganizationName" type="text" readonly="readonly">
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Phone Number</label>
                <div class="col-md-4">
                    <input class="form-control text-box single-line valid" data-val="true" id="FoundUser_PhoneNumber" name="FoundUser_PhoneNumber" type="text" readonly="readonly">
                </div>
            </div>

        </section>@*.box-body*@
        <div class="box-footer">
            <div class="form-group col-md-6 text-right">
                <input type="submit" id="sendToExistingInviteBtn" value="Send Invite" class="btn btn-sm btn-primary" formaction="" formmethod="post" />
                <input type="button" id="cancelInviteBtn" value="Cancel" class="btn btn-sm btn-primary" />
            </div>
            <div class="form-group col-md-6"></div>
        </div><!-- box-footer -->
    </div>

}

@section Scripts {
    @Scripts.Render(paths: "~/bundles/jqueryval")
    @Scripts.Render(paths: "~/bundles/invite")
}