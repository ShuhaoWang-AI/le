@model Linko.LinkoExchange.Web.ViewModels.Shared.AttachmentViewModel

@{
    ViewBag.Title = "Attachment Details";
}


@using (Html.BeginForm(actionName: "NewAttachmentDetails", controllerName: "Industry", routeValues: null, method: FormMethod.Post, htmlAttributes: new
                                                                                                                                                   {
                                                                                                                                                       enctype = "multipart/form-data"
                                                                                                                                                       ,
                                                                                                                                                       id = "LinkoExchangeForm"
                                                                                                                                                   }))
{
    @Html.AntiForgeryToken()

    <section>
        <ol class="breadcrumb">
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName: "Index", controllerName: "Industry")'"><i class=""></i> Home </a>
            </li>
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName: "Attachments", controllerName: "Industry")'"><i class=""></i> Attachments </a>
            </li>
            <li class="active">Details</li>
        </ol>
    </section>

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">
                Attachment Details
            </h3>

            <div class="box-tools pull-right">
                @if (!Model.UsedByReports)
                {
                    if (!ViewBag.Satus.Equals("New"))
                    {
                        <strong class="bg-yellow btn-sm text-info"> &nbsp;&nbsp;Draft&nbsp; </strong>
                    }
                }
                else
                {
                    <strong class="bg-purple btn-sm text-info"> &nbsp;&nbsp;Reported&nbsp; </strong>
                }

                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>

        <div aria-labelledby="DeleteAttachmentModalLabel" class="col-md-12 fade modal modal-info" id="DeleteAttachmentModal" role="dialog" tabindex="-1">
            <div class="modal-dialog" role="document">
                <div class="alert alert-dismissible alert-info modal-content">
                    <button aria-label="Close" class="close" data-dismiss="modal" type="button">&times;</button>
                    <h4 class="box-title">Delete Attachment</h4>

                    <div class="form-horizontal">
                        <p>
                            Do you want to delete this Attachment?<br />
                        </p>
                        <div class="form-group">
                            <div class="pull-right">
                                <button type="submit" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName: "DeleteAttachment", controllerName: "Industry", routeValues: new {id = Model.Id})" formmethod="post">
                                    Yes
                                </button>
                                <button aria-label="Close" class="btn btn-primary btn-sm" data-dismiss="modal" type="button">No</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <section class="box-body form-horizontal">
            @Html.ValidationSummary(excludePropertyErrors: false, message: Message.ValidationSummaryHeaderText, htmlAttributes: new
                                                                                                                                {
                                                                                                                                    @class = "alert alert-danger"
                                                                                                                                })
            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-dismissible alert-success">
                    <button aria-hidden="true" class="close" data-dismiss="alert" type="button">&times;</button>
                    <h5>
                        <i class="fa fa-check icon"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            @if (ViewBag.Satus.Equals("New"))
            {
                <div class="form-group">
                    @Html.Label(expression: "File", htmlAttributes: new
                                                                    {
                                                                        @class = "control-label col-md-2 required"
                                                                    })
                    <div class="col-md-10">
                        <input id="upload" name="upload" type="file" style="width: 100%;" accept=@Model.AllowedFileExtensions />
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.MediaType)
                    @Html.LabelFor(model => model.Name, htmlAttributes: new
                                                                        {
                                                                            @class = "control-label col-md-2"
                                                                        })
                    <div class="col-md-8">
                        @Html.ActionLink(linkText: Model.Name, actionName: "DownloadAttachment", routeValues: new
                                                                                                              {
                                                                                                                  id = Model.Id
                                                                                                              }, htmlAttributes: new
                                                                                                                                 {
                                                                                                                                     @class = "btn btn-sm btn-link"
                                                                                                                                 })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.OriginalFileName, htmlAttributes: new
                                                                                    {
                                                                                        @class = "control-label col-md-2"
                                                                                    })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.OriginalFileName, additionalViewData: new
                                                                                             {
                                                                                                 htmlAttributes = new
                                                                                                                  {
                                                                                                                      @class = "form-control",
                                                                                                                      @readonly = "readonly"
                                                                                                                  }
                                                                                             })
                    </div>
                </div>
            }

            <div class="form-group">

                @Html.LabelFor(model => model.ReportElementTypeId, htmlAttributes: new
                                                                                   {
                                                                                       @class = "control-label col-md-2 required"
                                                                                   })
                @if (Model.UsedByReports)
                {
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ReportElementTypeName, additionalViewData: new
                                                                                                  {
                                                                                                      htmlAttributes = new
                                                                                                                       {
                                                                                                                           @class = "form-control",
                                                                                                                           @readonly = "readonly"
                                                                                                                       }
                                                                                                  })
                    </div>
                }
                else
                {
                    <div class="col-md-4">
                        @Html.HiddenFor(model => model.ReportElementTypeName)
                        @Html.DropDownList(name: "ReportElementTypeId", selectList: Model.AvailableReportElementTypes, htmlAttributes: new
                                                                                                                                       {
                                                                                                                                           @class = "form-control"
                                                                                                                                       })
                        @Html.ValidationMessageFor(model => model.ReportElementTypeId, validationMessage: "", htmlAttributes: new
                                                                                                                              {
                                                                                                                                  @class = "text-danger"
                                                                                                                              })
                    </div>
                }
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new
                                                                           {
                                                                               @class = "control-label col-md-2"
                                                                           })
                @if (Model.UsedByReports)
                {
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Description, additionalViewData: new
                                                                                        {
                                                                                            htmlAttributes = new
                                                                                                             {
                                                                                                                 @class = "form-control",
                                                                                                                 @readonly = "readonly",
                                                                                                                 rows = "3",
                                                                                                                 maxlength = 500
                                                                                                             }
                                                                                        })
                    </div>
                }
                else
                {
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Description, additionalViewData: new
                                                                                        {
                                                                                            htmlAttributes = new
                                                                                                             {
                                                                                                                 @class = "form-control",
                                                                                                                 rows = "3",
                                                                                                                 maxlength = 500
                                                                                                             }
                                                                                        })
                    </div>
                }
            </div>
        </section>

        @if (!Model.UsedByReports)
        {
            <div class="box-footer">
                <div class="form-group pull-right">
                    @if (!ViewBag.Satus.Equals("New"))
                    {
                        <input type="submit" value="Save" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName: "AttachmentDetails", controllerName: "Industry")" formmethod="post" />

                        <input class="btn btn-primary btn-sm" data-target="#DeleteAttachmentModal" data-toggle="modal" type="button" value="Delete" />

                        if (ViewBag.fromCreateAttachment)
                        {
                            <input class="btn btn-primary btn-sm" type="submit" value="Add New" formaction= "@Url.Action(actionName:"NewAttachmentDetails", controllerName:"Industry")" formmethod="get" />
                        }
                    }
                    else
                    {
                        <input type="submit" value="Save" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName: "NewAttachmentDetails", controllerName: "Industry")" formmethod="post" />
                    }
                </div>
            </div>
        }
    </div>

@section Scripts {

    @if (ViewBag.Satus.Equals("New"))
    {
        @Scripts.Render(paths: "~/bundles/jqueryval")

        <script>
            $(document)
                .ready(function()
                {
                    $("#LinkoExchangeForm")
                        .submit(function()
                        {
                            var validationSummary = $('.validation-summary-errors');

                            if (validationSummary.length === 0)
                            {
                                // Form is still valid
                                validationSummary = $('.validation-summary-valid');
                            }

                            var maxFileSize = @ViewBag.MaxFileSize;
                            var file = $("input[name=upload]")[0].files[0];
                            var fileSize = 0;

                            if (file != null)
                            {
                                fileSize = file.size;
                            }

                            if (fileSize > maxFileSize)
                            {
                                validationSummary.removeClass("validation-summary-valid");
                                validationSummary.find("ul")
                                    .empty(); // remove li elements from the validation Summary list. valid form also have empty li element
                                var msg = "<li>The file size exceeds that "
                                    + (maxFileSize / 1024) / 1024
                                    + " MB limit.</li>";

                                validationSummary.find("ul").append(msg);
                                $("input[type='submit']").prop('disabled', false);
                                return false;
                            }
                            else
                            {
                                return true;
                            }
                        });
                });
        </script>
    }

    @if (!Model.UsedByReports)
    {
        <script>
            $(document)
                .ready(function()
                {
                    $("#LinkoExchangeForm")
                        .submit(function()
                        {
                            $("#ReportElementTypeName").val($("#ReportElementTypeId option:selected").text());
                            return true;
                        });
                });
        </script>
    }
}}