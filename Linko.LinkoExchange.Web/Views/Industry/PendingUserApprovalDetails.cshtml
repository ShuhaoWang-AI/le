@model Linko.LinkoExchange.Web.ViewModels.Shared.PendingUserApprovalViewModel

@{
    ViewBag.Title = "Profile Details";
}


<section>
    <ol class="breadcrumb">
        <li><a href="#" onclick="location.href = '@Url.Action(actionName: "Index", controllerName: "Industry")'"><i class=""></i> Home </a></li>
        <li><a href="#" onclick="location.href = '@Url.Action(actionName: "PendingUserApprovals", controllerName: "Industry")'"><i class=""></i> Pending Registrations </a></li>
        <li class="active">Profile Details</li>
    </ol>
</section>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">User Information</h3>
            <div class="box-tools pull-right">
                <div class="pull-right">
                    @if ((ViewBag.HasPermissionForApproveDeny!=null && ViewBag.HasPermissionForApproveDeny)
                        && (ViewBag.ShowSuccessMessage == null))
                    {
                        <input type="button" value="Approve" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#ApproveModal" />
                        <input type="button" value="Deny" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#DenyModal" />
                    }                
                </div>
            </div><!-- /.box-tools -->
        </div>  @*.box-header*@

        <section class="box-body form-horizontal">

            @Html.ValidationSummary(excludePropertyErrors: true, message: Message.ValidationSummaryHeaderText, htmlAttributes: new { @class = "alert alert-danger" })
            
            @if (ViewBag.ShowSuccessMessage!= null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-success alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <h5>
                        <i class="icon fa fa-check"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            <div class="col-md-12 modal modal-info fade" id="ApproveModal" tabindex="-1" role="dialog" aria-labelledby="resetModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content alert alert-info alert-dismissible">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">&times;</button>
                        <h4 class="box-title">Approve Registration</h4>

                        <div>
                            <div class="form-group">
                                <div class="pull-right">
                                    <button type="submit" class="btn btn-sm btn-primary"
                                            formaction="@Url.Action(actionName: "PendingUserApprove", controllerName: "Industry")" formmethod="post">
                                        Yes
                                    </button>
                                    <button type="button" class="btn btn-sm btn-primary" data-dismiss="modal" aria-label="Close">No</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 modal modal-info fade" id="DenyModal" tabindex="-1" role="dialog" aria-labelledby="removeModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content alert alert-info alert-dismissible">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">&times;</button>
                        <h4 class="box-title">Deny Registration</h4>

                        <div>
                            <div class="form-group">
                                <div class="pull-right">
                                    <button type="submit" class="btn btn-sm btn-primary"
                                            formaction="@Url.Action(actionName: "PendingUserDeny", controllerName: "Industry")" formmethod="post">
                                        Yes
                                    </button>
                                    <button type="button" class="btn btn-sm btn-primary" data-dismiss="modal" aria-label="Close">No</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @Html.HiddenFor(model => model.PId)
                    
            <div class="form-group">
                @Html.LabelFor(model => model.RegisteredOrgName, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.RegisteredOrgName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>                

                @Html.LabelFor(model => model.Role, htmlAttributes: new
                {
                    @class = "control-label col-md-2 required"
                })
                <div class="col-md-4">
                    @Html.DropDownList(name: "Role", selectList: Model.AvailableRoles, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Role, "", new
                    {
                        @class = "text-red"
                    })
                </div>
            </div>        

            <div class="form-group">
                @Html.LabelFor(model => model.DateRegistered, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.DateRegistered, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>

            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FirstName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>

                @Html.LabelFor(model => model.LastName, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.UserName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
                @Html.LabelFor(model => model.Email, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Email, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BusinessName, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.BusinessName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>

                @Html.LabelFor(model => model.TitleRole, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.TitleRole, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneNumber, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>

                @Html.LabelFor(model => model.PhoneExt, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneExt, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AddressLine1, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AddressLine2, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CityName, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.CityName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>

                @Html.LabelFor(model => model.State, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.State, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ZipCode, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
                </div>
            </div>
        </section>@*.box-body*@
    </div><!-- /.box -->
	
}