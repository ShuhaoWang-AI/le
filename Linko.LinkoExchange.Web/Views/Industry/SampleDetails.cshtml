@using Linko.LinkoExchange.Core.Enum
@model Linko.LinkoExchange.Web.ViewModels.Shared.SampleViewModel

@{
    ViewBag.Title = "Sample Details";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section>
        <ol class="breadcrumb">
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"Index", controllerName:"Industry")'"><i class=""></i> Home </a>
            </li>
            <li>
                <a href="#" onclick="location.href = '@Url.Action(actionName:"Samples", controllerName:"Industry", routeValues:new {sampleStatus = SampleStatusName.Draft})'"><i class=""></i> Samples </a>
            </li>
            <li class="active">Details</li>
        </ol>
    </section>

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">
                @Model.MonitoringPointName
            </h3>

            <div class="box-tools pull-right">

                @if (!Model.IsReadyToReport)
                {
                    if (!ViewBag.Satus.Equals("New"))
                    {
                        <input type="submit" value="Save" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName:"SampleDetails", controllerName:"Industry")" formmethod="post" />

                        <input class="btn btn-primary btn-sm" data-target="#DeleteSampleModal" data-toggle="modal" type="button" value="Delete" />
                    }
                    else
                    {
                        <input type="submit" value="Save" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName:"NewSampleDetailsStep2", controllerName:"Industry")" formmethod="post" />
                    }
                }


                @switch (Model.SampleStatusName)
                {
                    case SampleStatusName.Draft:
                        <strong class="bg-yellow text-info"> &nbsp;&nbsp;Draft&nbsp; </strong>
                        break;
                    case SampleStatusName.ReadyToReport:
                        <strong class="bg-yellow text-info"> &nbsp;&nbsp;Ready to Report&nbsp; </strong>
                        break;
                    case SampleStatusName.Reported:
                        <strong class="bg-yellow text-info"> &nbsp;&nbsp;Reported&nbsp; </strong>
                        break;
                }

                <button class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>

        <section class="box-body form-horizontal">
            @Html.ValidationSummary(excludePropertyErrors:true, message:Message.ValidationSummaryHeaderText, htmlAttributes:new
                                                                                                                            {
                                                                                                                                @class = "alert alert-danger"
                                                                                                                            })
            @if (ViewBag.ShowSuccessMessage != null && ViewBag.ShowSuccessMessage)
            {
                <div class="alert alert-dismissible alert-success">
                    <button aria-hidden="true" class="close" data-dismiss="alert" type="button">&times;</button>
                    <h5>
                        <i class="fa fa-check icon"></i>
                        @ViewBag.SuccessMessage
                    </h5>
                </div>
            }

            <div aria-labelledby="DeleteSampleModalLabel" class="col-md-12 fade modal modal-info" id="DeleteSampleModal" role="dialog" tabindex="-1">
                <div class="modal-dialog" role="document">
                    <div class="alert alert-dismissible alert-info modal-content">
                        <button aria-label="Close" class="close" data-dismiss="modal" type="button">&times;</button>
                        <h4 class="box-title">Delete Sample</h4>

                        <div>
                            <p>
                                Do you want to delete this Sample?<br />
                            </p>
                            <div class="form-group">
                                <div class="pull-right">
                                    <button type="submit" class="btn btn-primary btn-sm" formaction="@Url.Action(actionName:"DeleteSample", controllerName:"Industry", routeValues:new {id = Model.Id})" formmethod="post">
                                        Yes
                                    </button>
                                    <button aria-label="Close" class="btn btn-primary btn-sm" data-dismiss="modal" type="button">No</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.MassLoadingConversionFactorPounds)
                @Html.HiddenFor(model => model.MassLoadingCalculationDecimalPlaces)
                @Html.HiddenFor(model => model.IsMassLoadingResultToUseLessThanSign)
                @Html.HiddenFor(model => model.MassLoadingMassLoadingUnitId)
                @Html.HiddenFor(model => model.MassLoadingMassLoadingUnitName)
                @Html.HiddenFor(model => model.ResultQualifierValidValues)
                @Html.HiddenFor(model => model.SampleStatusName)
            </div>
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.CollectionMethodId, htmlAttributes:new
                                                                                         {
                                                                                             @class = "control-label col-sm-6 required"
                                                                                         })
                        <div class="col-sm-6">
                            @Html.DropDownList(name:"CollectionMethodId", selectList:Model.AvailableCollectionMethods, htmlAttributes:new
                                                                                                                                      {
                                                                                                                                          @class = "form-control input-sm"
                                                                                                                                      })
                            @Html.ValidationMessageFor(model => model.CollectionMethodId, validationMessage:"", htmlAttributes:new
                                                                                                                               {
                                                                                                                                   @class = "text-danger"
                                                                                                                               })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.CtsEventTypeId, htmlAttributes:new
                                                                                     {
                                                                                         @class = "control-label col-sm-5 required"
                                                                                     })
                        <div class="col-sm-7">
                            @Html.DropDownList(name:"CtsEventTypeId", selectList:Model.AvailableCtsEventTypes, htmlAttributes:new
                                                                                                                              {
                                                                                                                                  @class = "form-control input-sm"
                                                                                                                              })
                            @Html.ValidationMessageFor(model => model.CtsEventTypeId, validationMessage:"", htmlAttributes:new
                                                                                                                           {
                                                                                                                               @class = "text-danger"
                                                                                                                           })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.StartDateTimeLocal, htmlAttributes:new
                                                                                         {
                                                                                             @class = "control-label col-sm-4 required"
                                                                                         })
                        <div class="col-sm-8">
                            @(Html.Kendo().DateTimePicker()
                                  .Name(componentName:"StartDateTimeLocal")
                                  .Value(date: Model.StartDateTimeLocal)
                                  .Format(format:"MM/dd/yyyy hh:mm:ss tt")
                                  .HtmlAttributes(attributes:new
                                                             {
                                                                 style = "width:210px;"
                                                             }))
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.LabSampleIdentifier, htmlAttributes:new
                                                                                          {
                                                                                              @class = "control-label col-sm-6"
                                                                                          })
                        <div class="col-sm-6">
                            <input class="form-control input-sm" id="LabSampleId" type="text">
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.FlowValue, htmlAttributes:new
                                                                                {
                                                                                    @class = "control-label col-sm-5"
                                                                                })
                        <div class="col-sm-7">
                            <div class="col-sm-7 no-margin no-padding">
                                @Html.EditorFor(model => model.FlowValue, additionalViewData:new
                                                                                             {
                                                                                                 htmlAttributes = new
                                                                                                                  {
                                                                                                                      @class = "form-control input-sm"
                                                                                                                  }
                                                                                             })
                            </div>
                            <div class="col-sm-5 no-padding">
                                @Html.DropDownList(name:"FlowUnitId", selectList:Model.AvailableFlowUnits, htmlAttributes:new
                                                                                                                          {
                                                                                                                              @class = "form-control input-sm"
                                                                                                                          })
                                @Html.ValidationMessageFor(model => model.FlowUnitId, validationMessage:"", htmlAttributes:new
                                                                                                                           {
                                                                                                                               @class = "text-danger"
                                                                                                                           })
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.EndDateTimeLocal, htmlAttributes:new
                                                                                       {
                                                                                           @class = "control-label col-sm-4 required"
                                                                                       })
                        <div class="col-sm-8">
                            @(Html.Kendo().DateTimePicker()
                                  .Name(componentName:"EndDateTimeLocal")
                                  .Value(date: Model.EndDateTimeLocal)
                                  .Format(format:"MM/dd/yyyy hh:mm:ss tt")
                                  .HtmlAttributes(attributes:new
                                  {
                                      style = "width:210px;"
                                  }))
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    //parameter Groups

    <div class="box box-primary">
        <div class="box-header with-border" data-toggle="collapse" data-target="#step2">
            <strong>Parameter Groups</strong>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
            </div><!-- /.box-tools -->
        </div>
        <div class="box-body box-collapse collapse in" id="step2">
            <table class="table table-striped table-bordered table-condensed" id="ParameterGroupTable">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Parameter Group</th>
                        <th>Description</th>
                        <th>ParameterIds</th>
                        <th class="text-center">Add</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var parameterGroup in Model.ParameterGroups)
                    {
                        <tr>
                            <td>@parameterGroup.Id</td>
                            <td>@parameterGroup.Name</td>
                            <td>@parameterGroup.Description</td>
                            <td>@string.Join(",", parameterGroup.ParameterIds)</td>
                            <td align="center">
                                <button class="btn btn-sm btn-primary" name="AddParamsFromGroup" data-title="AddParamsFromGroup">
                                    <i class="fa fa-lg fa-plus"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}