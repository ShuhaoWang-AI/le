 

@{ 
    var questions = this.ViewData["Questions"] as IEnumerable<Linko.LinkoExchange.Web.ViewModels.User.QuestionAnswerPairViewModel>;
    var questionPool = this.ViewData["QuestionPool"] as IEnumerable<Linko.LinkoExchange.Web.ViewModels.User.QuestionViewModel>;
    var submitId = this.ViewData["submitBtnId"] as string;
    var editBtnId = this.ViewData["editBtnId"] as string;
    var ids = this.ViewData["questionIds"] as List<int>; 
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title"> @ViewData["Title"] </h3>
        <div class="box-tools pull-right">
            <div class="pull-right">
                <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
            </div>
        </div><!-- /.box-tools -->
    </div>  @*.box-header*@

    <section class="box-body form-horizontal">

        @Html.ValidationSummary(excludePropertyErrors: true, message: "", htmlAttributes: new { @class = "alert alert-danger" })
    
        <div class="questionDiv"> 
            
            @{
                            int idx = 0; 
                            foreach (var questionAnswer in questions)
                            {
                <div class="form-group">
                    <div class="col-lg-2 control-label" >
                        @Html.LabelFor(i=> questionAnswer.Question)
                    </div>
                    <div class="col-md-8"> 

                        @Html.DropDownListFor(model => ids[idx],

                       questionPool.Select(i => new SelectListItem
                       {
                           Text = i.Content,
                           Value = i.QuestionId.Value.ToString(),
                           Selected = questionAnswer.Question.QuestionId.ToString() == i.QuestionId.Value.ToString()
                       }),
                       new
                       {
                           @class = "form-control"
                       }
                     )
 
                    </div>
                    </div>
               
                 <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(i => questionAnswer.Answer)
                        </div>

                        <div class="col-md-8">

                            @Html.EditorFor(model => questionAnswer.Answer.Content, new
                  {
                      htmlAttributes = new
                      {
                          @class = "form-control",
                          @style = "margin-top:5px"
                      }
                  })
                        </div>
                    </div>

                    idx++; 
                }
            }


        </div>
 
    </section>@*.box-body*@
    <div class="box-footer">
        <div class="form-group">
            <div id="@editBtnId"  class="btn btn-sm btn-primary pull-right edit-button">Edit</div>
            <input type="submit" id="@submitId" value="Save" name="Command" class="btn btn-sm btn-primary pull-right" />
        </div>
    </div><!-- box-footer -->
</div><!-- /.box -->
