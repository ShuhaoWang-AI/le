<!--

>>>>>>>>>>>>>>>> WARNING <<<<<<<<<<<<<<<<

There are various places throughout this page where we have opted NOT to use Html.HiddenFor to persist values between postbacks.

It is a known issue that if we are modifying a viewmodel's property on the server after posting, MVC will choose the originally posted value
and NOT the manually updated value to repopulate the Html.HiddenFor fields.

Please refer to this SO post:

https://stackoverflow.com/questions/4837744/hiddenfor-not-getting-correct-value-from-view-model

--> 
@using Linko.LinkoExchange.Web.ViewModels.Shared
@using Linko.LinkoExchange.Web.ViewModels.User
@model UserViewModel

@{
    ViewBag.Title = "Profile";
    var sqQuestionPool = Model.UserSQ.QuestionPool;
    var kbqQuestionPool = Model.UserKBQ.QuestionPool;
    var inValidProfile = ViewBag.InValidProfile;
    var inValidKBQ = ViewBag.InValidKBQ;
    var inValidSQ = ViewBag.InValidSQ;

    var sqArr = new List<QuestionAnswerViewModel>
                {
                    new QuestionAnswerViewModel
                    {
                        QuestionTypeName = Linko.LinkoExchange.Services.Dto.QuestionTypeName.SQ,
                        QuestionAnswerId = Model.UserSQ.UserQuestionAnserId_SQ1,
                        Content = Model.UserSQ.SecurityQuestionAnswer1,
                        QuestionId = Model.UserSQ.SecurityQuestion1,
                        QuestionLabel = Html.DisplayNameFor(m => m.UserSQ.SecurityQuestion1).ToHtmlString(),
                        AnswerLabel = Html.DisplayNameFor(m => m.UserSQ.SecurityQuestionAnswer1).ToHtmlString()
                    },
                    new QuestionAnswerViewModel
                    {
                        QuestionTypeName = Linko.LinkoExchange.Services.Dto.QuestionTypeName.SQ,
                        QuestionAnswerId = Model.UserSQ.UserQuestionAnserId_SQ2,
                        Content = Model.UserSQ.SecurityQuestionAnswer2,
                        QuestionId = Model.UserSQ.SecurityQuestion2,
                        QuestionLabel = Html.DisplayNameFor(m => m.UserSQ.SecurityQuestion2).ToHtmlString(),
                        AnswerLabel = Html.DisplayNameFor(m => m.UserSQ.SecurityQuestionAnswer2).ToHtmlString()
                    }
                };

    var kbqArr = new List<QuestionAnswerViewModel>();
    kbqArr.AddRange(new[]
                    {
                        new QuestionAnswerViewModel
                        {
                            QuestionTypeName = Linko.LinkoExchange.Services.Dto.QuestionTypeName.KBQ,
                            QuestionAnswerId = Model.UserKBQ.UserQuestionAnserId_KBQ1,
                            Content = Model.UserKBQ.KBQAnswer1,
                            QuestionId = Model.UserKBQ.KBQ1,
                            QuestionLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQ1).ToHtmlString(),
                            AnswerLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQAnswer1).ToHtmlString()
                        },
                        new QuestionAnswerViewModel
                        {
                            QuestionTypeName = Linko.LinkoExchange.Services.Dto.QuestionTypeName.KBQ,
                            QuestionAnswerId = Model.UserKBQ.UserQuestionAnserId_KBQ2,
                            Content = Model.UserKBQ.KBQAnswer2,
                            QuestionId = Model.UserKBQ.KBQ2,
                            QuestionLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQ2).ToHtmlString(),
                            AnswerLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQAnswer2).ToHtmlString()
                        },
                        new QuestionAnswerViewModel
                        {
                            QuestionTypeName = Linko.LinkoExchange.Services.Dto.QuestionTypeName.KBQ,
                            QuestionAnswerId = Model.UserKBQ.UserQuestionAnserId_KBQ3,
                            Content = Model.UserKBQ.KBQAnswer3,
                            QuestionId = Model.UserKBQ.KBQ3,
                            QuestionLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQ3).ToHtmlString(),
                            AnswerLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQAnswer3).ToHtmlString()
                        },
                        new QuestionAnswerViewModel
                        {
                            QuestionTypeName = Linko.LinkoExchange.Services.Dto.QuestionTypeName.KBQ,
                            QuestionAnswerId = Model.UserKBQ.UserQuestionAnserId_KBQ4,
                            Content = Model.UserKBQ.KBQAnswer4,
                            QuestionId = Model.UserKBQ.KBQ4,
                            QuestionLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQ4).ToHtmlString(),
                            AnswerLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQAnswer4).ToHtmlString()
                        },
                        new QuestionAnswerViewModel
                        {
                            QuestionTypeName = Linko.LinkoExchange.Services.Dto.QuestionTypeName.KBQ,
                            QuestionAnswerId = Model.UserKBQ.UserQuestionAnserId_KBQ5,
                            Content = Model.UserKBQ.KBQAnswer5,
                            QuestionId = Model.UserKBQ.KBQ5,
                            QuestionLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQ5).ToHtmlString(),
                            AnswerLabel = Html.DisplayNameFor(m => m.UserKBQ.KBQAnswer5).ToHtmlString()
                        }
                    });
}

<section>
    <ol class="breadcrumb">
        <li>
            <a href="#" onclick="location.href = '@Url.Action(actionName:"Index", controllerName:"Home")'"><i class=""></i> Home </a>
        </li>
        <li class="active"> Profile </li>
    </ol>
</section>

<style>
    .left-flow-link
    {
        float: left;
        margin-left: 0px;
        margin-top: 10px;
        text-align: left;
        vertical-align: bottom;
    }
   
    .tools {
        display:inline-block;
        float:left;
        color: #337ab7; 
        vertical-align: bottom;
        margin-left:-10px;
        padding-top:7px;
    } 

    .kbq-div {
        background-color:transparent
    }
    .tools:hover,
    .kbq:hover + .tools{
        display:inline-block; 
    }

    .fa-save.disabled,
    .fa-edit.disabled {
        opacity:0.65;
        cursor:not-allowed
    }

</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input id="profileCollapsed" name="profileCollapsed" type="hidden" value="true" />
    <input id="kbqCollapsed" name="kbqCollapsed" type="hidden" value="false" />
    <input id="sqCollapsed" name="sqCollapsed" type="hidden" value="false" />

    <div class="profileDiv" id="user-info-panel">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Profile Details
                </h3>
                <div class="box-tools pull-right">
                    <div class="pull-right">
                        @if (ViewBag.PortalName != null && ViewBag.PortalName.ToLower().Equals(value:"industry") && Model.UserProfile.HasSigntory == false)
                        {
                            @Html.ActionLink(linkText:"Request Signatory", actionName:"RequestSignatory", controllerName:"User", routeValues:null,
                                htmlAttributes:new
                                               {
                                                   @class = "btn btn-sm btn-primary"
                                               })
                        }
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>
            <div>
                @if (ViewData.ModelState.IsValid == false && inValidProfile)
                {
                    @Html.ValidationSummary(excludePropertyErrors:false, message:"",
                        htmlAttributes:new
                                       {
                                           @class = "alert alert-danger"
                                       })
                }

                @{
                    var vm = new ConfirmationMessageViewModal
                             {
                                 ShowMessage = ViewBag.SaveProfileSuccessfull != null && !string.IsNullOrWhiteSpace(value:ViewBag.SuccessMessage),
                                 Messaage = ViewBag.SuccessMessage
                             };
                    @Html.Partial(partialViewName:"_ConfirmationMessageView", model:vm)
                    
                    vm = new ConfirmationMessageViewModal
                         {
                             ShowMessage = ViewBag.changeEmailSucceed != null && ViewBag.changeEmailSucceed,
                             Messaage = "Email successfully changed."
                         };
                    @Html.Partial(partialViewName:"_ConfirmationMessageView", model:vm)

                    vm = new ConfirmationMessageViewModal
                         {
                             ShowMessage = ViewBag.changePasswordSucceed != null && ViewBag.changePasswordSucceed,
                             Messaage = "Password successfully changed."
                         };
                    @Html.Partial(partialViewName:"_ConfirmationMessageView", model:vm)
                }
            </div>

            <section class="box-body form-horizontal">
                <div class="editabledDiv">
                    <!-- Line 1 FirstName and LastName -->
                    <div class="form-group required">
                        @Html.LabelFor(m => m.UserProfile.FirstName, htmlAttributes:new
                                                                                    {
                                                                                        @class = "control-label col-md-2 required "
                                                                                    })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.FirstName,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control editable"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.FirstName, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.LastName, htmlAttributes:new
                                                                                   {
                                                                                       @class = "control-label col-md-2 required"
                                                                                   })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.LastName,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.LastName, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>

                    <!-- Line 2 Organization and TitleROle -->
                    <div class="form-group ">
                        @Html.LabelFor(m => m.UserProfile.BusinessName, htmlAttributes:new
                                                                                       {
                                                                                           @class = " control-label col-md-2 required "
                                                                                       })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.BusinessName,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control "
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.BusinessName, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.TitleRole, htmlAttributes:new
                                                                                    {
                                                                                        @class = "control-label col-md-2"
                                                                                    })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.TitleRole,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                        </div>
                    </div>

                    <!-- Line 3 AddressLine1 and AddressLine2 -->
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserProfile.AddressLine1, htmlAttributes:new
                                                                                       {
                                                                                           @class = "control-label col-md-2 required"
                                                                                       })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.AddressLine1,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.AddressLine1, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.AddressLine2, htmlAttributes:new
                                                                                       {
                                                                                           @class = "control-label col-md-2"
                                                                                       })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.AddressLine2,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                        </div>
                    </div>

                    <!-- Line 4 City and State -->
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserProfile.CityName, htmlAttributes:new
                                                                                   {
                                                                                       @class = "control-label col-md-2 required"
                                                                                   })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.CityName,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.CityName, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.JurisdictionId, htmlAttributes:new
                                                                                         {
                                                                                             @class = "control-label col-md-2 required"
                                                                                         })
                        <div class="col-md-4">
                            @Html.DropDownListFor(m => m.UserProfile.JurisdictionId,
                                selectList:Model.UserProfile.StateList.Select(i => new SelectListItem
                                                                                   {
                                                                                       Text = i.StateName,
                                                                                       Value = i.JurisdictionId.ToString(),
                                                                                       Selected = Model.UserProfile.JurisdictionId == i.JurisdictionId
                                                                                   }).ToList(),
                                htmlAttributes:new
                                               {
                                                   @class = "form-control",
                                                   disabled = "disabled"
                                               }
                                )
                            @Html.HiddenFor(m => m.UserProfile.JurisdictionId)
                            @Html.ValidationMessageFor(m => m.UserProfile.JurisdictionId, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               }
                                )
                        </div>
                    </div>

                    <!-- Line 5 Zip Code -->
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserProfile.ZipCode, htmlAttributes:new
                                                                                  {
                                                                                      @class = "control-label col-md-2 required"
                                                                                  })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.ZipCode,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.ZipCode, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>

                    <!-- Line 6 Phone and Ext -->
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserProfile.PhoneNumber, htmlAttributes:new
                                                                                      {
                                                                                          @class = "control-label col-md-2 required"
                                                                                      })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.PhoneNumber,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.PhoneNumber, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.PhoneExt,
                            htmlAttributes:new
                                           {
                                               @class = "control-label col-md-2"
                                           })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.PhoneExt,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control",
                                                                            type = "text"
                                                                        }
                                                   })
                        </div>
                    </div>
                </div>
                <hr />

                <!-- Line 7 Email -->
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.Email,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2 required"
                                       })
                    <div class="col-md-4">
                        @Html.EditorFor(m => m.UserProfile.Email,
                            additionalViewData:new
                                               {
                                                   htmlAttributes = new
                                                                    {
                                                                        @class = "form-control",
                                                                        @readonly = "true"
                                                                    }
                                               })
                        @*@Html.ValidationMessageFor(m => m.UserProfile.Email, "", new { @class = "text-danger" })*@
                    </div>
                    <div>
                        @Html.ActionLink(linkText:"Change", actionName:"ChangeEmail", controllerName:"Account", routeValues:null,
                            htmlAttributes:new
                                           {
                                               @class = "left-flow-link"
                                           })
                    </div>

                </div>

                <!-- Line 8 UserName -->
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.UserName,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2 required"
                                       })
                    <div class="col-md-4">
                        @Html.EditorFor(m => m.UserProfile.UserName,
                            additionalViewData:new
                                               {
                                                   htmlAttributes = new
                                                                    {
                                                                        @class = "form-control",
                                                                        @readonly = "true"
                                                                    }
                                               })
                        @*@Html.ValidationMessageFor(m => m.UserProfile.UserName, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <!-- Line 9 Password -->
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.Password,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2 required"
                                       })
                    <div class="col-md-4">
                        @Html.PasswordFor(m => m.UserProfile.Password,
                            htmlAttributes:new
                                           {
                                               @class = "form-control",
                                               @readonly = "true"
                                           })
                        @*@Html.ValidationMessageFor(m => m.UserProfile.Password, "", new { @class = "text-danger" })*@
                    </div>
                    @Html.ActionLink(linkText:"Change", actionName:"ChangePassword", controllerName:"Account", routeValues:null,
                        htmlAttributes:new
                                       {
                                           @class = "left-flow-link"
                                       })
                </div>
                <hr />
                <!-- Line 10 Role and signatory-->
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.Role,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2"
                                       })

                    <div class="col-md-4">
                        @Html.EditorFor(m => m.UserProfile.Role,
                            additionalViewData:new
                                               {
                                                   htmlAttributes = new
                                                                    {
                                                                        @class = "form-control",
                                                                        @readonly = "true"
                                                                    }
                                               })
                    </div>

                    @Html.LabelFor(m => m.UserProfile.HasSigntory,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2"
                                       })
                    <div class="col-md-4">
                        @Html.EditorFor(model => Model.UserProfile.HasSigntoryText,
                            additionalViewData:new
                                               {
                                                   htmlAttributes = new
                                                                    {
                                                                        @class = "form-control",
                                                                        @readonly = "true"
                                                                    }
                                               })
                    </div>
                </div>

            </section>
            <div class="box-footer">
                <div class="form-group">
                    <input type="button" value="Edit" class="btn btn-primary btn-sm edit-button pull-right" id="profileEditBtn"/>
                    <input id="profileSubmit" type="submit" value="Save" name="Command" class="btn btn-primary btn-sm pull-right" formaction="@Url.Action(actionName:"UserProfile", controllerName:"User", routeValues:new {part = "Profile"})#user-info-panel" formmethod="post" />
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input id="profileCollapsed" name="profileCollapsed" type="hidden" value="true" />
    <input id="kbqCollapsed" name="kbqCollapsed" type="hidden" value="false" />
    <input id="sqCollapsed" name="sqCollapsed" type="hidden" value="false" />

    <div class="profileDiv" id="kbq-panel">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Knowledge Based Questions
                </h3>
                <div class="box-tools pull-right">
                    <div class="pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>  

            <div class="summaryDiv"> 
            </div> 
 
            <section class="box-body form-horizontal">
                <h4>Select Answers to 5 Knowledge Based Questions</h4>
                <span>
                    Knowledge Based Questions are used along with your password to further prove your identity during report submission.
                    During report submission you will be required to enter an answer that matches what you enter below.
                </span>
                <br />
                <br />
                <br />
                <div class="editabledDiv">
                    @{
                        var kbqPool = new ViewDataDictionary {{"QuestionAnswers", kbqQuestionPool}, { "EditHint", "Update Knowledge Based Question" } };
                        foreach(var kbq in kbqArr)
                        {
                            Html.RenderPartial("_QuestionAnswer", kbq, kbqPool);
                        }
                    }
                </div>
            </section>
            <div class="box-footer">
                 
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input id="profileCollapsed" name="profileCollapsed" type="hidden" />
    <input id="kbqCollapsed" name="kbqCollapsed" type="hidden" />
    <input id="sqCollapsed" name="sqCollapsed" type="hidden" />

    <div class="profileDiv" id="sq-panel">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Security Questions
                </h3>
                <div class="box-tools pull-right">
                    <div class="pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div class="summaryDiv">
                
            </div>

            <section class="box-body form-horizontal">
                <h4>
                    Select Answers to 2 Security Questions
                </h4>
                <span>
                    Security Questions are used to unlock your account if it is locked because of suspicion of compromise.
                    You may be asked the answer to these questions by your authority.
                </span>
                <br />
                <br />
                <br />
                <div class="editabledDiv">
                    @{
                        var securityQuestonPool = new ViewDataDictionary {{"QuestionAnswers", sqQuestionPool}, { "EditHint", "Update Security Question" } };
                        foreach (var sq in sqArr)
                        {
                            Html.RenderPartial("_QuestionAnswer", sq, securityQuestonPool);
                        }
                    } 
                </div>

            </section>
            <div class="box-footer">
            </div>
        </div>
    </div>


    <div id="errorPanel" style="display:none" class="validation-summary-errors alert alert-danger alert-dismissible" data-valmsg-summary="true">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <ul></ul>
    </div>
  

    <div id="succeedPanel"  style="display:none" class="alert alert-success alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button> 
        <ul></ul>
    </div>

 } 

@section Scripts {
    @Scripts.Render(paths:"~/bundles/profile")
    @Scripts.Render(paths:"~/bundles/jqueryval")

    <script type="text/javascript">
        var profileCollapsed = '@Html.Raw(ViewBag.profileCollapsed)';
        var kbqCollapsed = '@Html.Raw(ViewBag.kbqCollapsed)';
        var sqCollapsed = '@Html.Raw(ViewBag.sqCollapsed)';
        var newRegistration = '@Html.Raw(ViewBag.newRegistration)';

        $(document)
            .ready(function()
            {
                disableAutoComplete();
            }()); 
    </script>
}