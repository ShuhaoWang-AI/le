<!--

>>>>>>>>>>>>>>>> WARNING <<<<<<<<<<<<<<<<

There are various places throughout this page where we have opted NOT to use Html.HiddenFor to persist values between postbacks.

It is a known issue that if we are modifying a viewmodel's property on the server after posting, MVC will choose the originally posted value
and NOT the manually updated value to repopulate the Html.HiddenFor fields.

Please refer to this SO post:

https://stackoverflow.com/questions/4837744/hiddenfor-not-getting-correct-value-from-view-model

-->

@using Linko.LinkoExchange.Web.ViewModels.Shared
@model Linko.LinkoExchange.Web.ViewModels.User.UserViewModel

@{
    ViewBag.Title = "Profile";
    var sqQuestionPool = Model.UserSQ.QuestionPool;
    var kbqQuestionPool = Model.UserKBQ.QuestionPool;
    var inValidProfile = ViewBag.InValidProfile;
    var inValidKBQ = ViewBag.InValidKBQ;
    var inValidSQ = ViewBag.InValidSQ;
}

<section>
    <ol class="breadcrumb">
        <li>
            <a href="#" onclick="location.href = '@Url.Action(actionName:"Index", controllerName:"Home")'"><i class=""></i> Home </a>
        </li>
        <li class="active"> Profile </li>
    </ol>
</section>

<style>
    .left-flow-link
    {
        float: left;
        margin-left: 0px;
        margin-top: 10px;
        text-align: left;
        vertical-align: bottom;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input id="profileCollapsed" name="profileCollapsed" type="hidden" value="true" />
    <input id="kbqCollapsed" name="kbqCollapsed" type="hidden" value="false" />
    <input id="sqCollapsed" name="sqCollapsed" type="hidden" value="false" />

    <div class="profileDiv" id="user-info-panel">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Profile Details
                </h3>
                <div class="box-tools pull-right">
                    <div class="pull-right">
                        @if (ViewBag.PortalName != null && ViewBag.PortalName.ToLower().Equals(value:"industry") && Model.UserProfile.HasSigntory == false)
                        {
                            @Html.ActionLink(linkText:"Request Signatory", actionName:"RequestSignatory", controllerName:"User", routeValues:null,
                                htmlAttributes:new
                                               {
                                                   @class = "btn btn-sm btn-primary"
                                               })
                        }
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>
            <div>
                @if (ViewData.ModelState.IsValid == false && inValidProfile)
                {
                    @Html.ValidationSummary(excludePropertyErrors:false, message:"",
                        htmlAttributes:new
                                       {
                                           @class = "alert alert-danger"
                                       })
                }

                @{
                    var vm = new ConfirmationMessageViewModal
                             {
                                 ShowMessage = ViewBag.SaveProfileSuccessfull != null && !string.IsNullOrWhiteSpace(value:ViewBag.SuccessMessage),
                                 Messaage = ViewBag.SuccessMessage
                             };
                    @Html.Partial(partialViewName:"_ConfirmationMessageView", model:vm)
                    
                    vm = new ConfirmationMessageViewModal
                         {
                             ShowMessage = ViewBag.changeEmailSucceed != null && ViewBag.changeEmailSucceed,
                             Messaage = "Email successfully changed."
                         };
                    @Html.Partial(partialViewName:"_ConfirmationMessageView", model:vm)

                    vm = new ConfirmationMessageViewModal
                         {
                             ShowMessage = ViewBag.changePasswordSucceed != null && ViewBag.changePasswordSucceed,
                             Messaage = "Password successfully changed."
                         };
                    @Html.Partial(partialViewName:"_ConfirmationMessageView", model:vm)
                }
            </div>

            <section class="box-body form-horizontal">
                <div class="editabledDiv">
                    <!-- Line 1 FirstName and LastName -->
                    <div class="form-group required">
                        @Html.LabelFor(m => m.UserProfile.FirstName, htmlAttributes:new
                                                                                    {
                                                                                        @class = "control-label col-md-2 required "
                                                                                    })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.FirstName,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control editable"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.FirstName, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.LastName, htmlAttributes:new
                                                                                   {
                                                                                       @class = "control-label col-md-2 required"
                                                                                   })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.LastName,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.LastName, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>

                    <!-- Line 2 Organization and TitleROle -->
                    <div class="form-group ">
                        @Html.LabelFor(m => m.UserProfile.BusinessName, htmlAttributes:new
                                                                                       {
                                                                                           @class = " control-label col-md-2 required "
                                                                                       })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.BusinessName,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control "
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.BusinessName, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.TitleRole, htmlAttributes:new
                                                                                    {
                                                                                        @class = "control-label col-md-2"
                                                                                    })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.TitleRole,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                        </div>
                    </div>

                    <!-- Line 3 AddressLine1 and AddressLine2 -->
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserProfile.AddressLine1, htmlAttributes:new
                                                                                       {
                                                                                           @class = "control-label col-md-2 required"
                                                                                       })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.AddressLine1,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.AddressLine1, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.AddressLine2, htmlAttributes:new
                                                                                       {
                                                                                           @class = "control-label col-md-2"
                                                                                       })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.AddressLine2,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                        </div>
                    </div>

                    <!-- Line 4 City and State -->
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserProfile.CityName, htmlAttributes:new
                                                                                   {
                                                                                       @class = "control-label col-md-2 required"
                                                                                   })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.CityName,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.CityName, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.JurisdictionId, htmlAttributes:new
                                                                                         {
                                                                                             @class = "control-label col-md-2 required"
                                                                                         })
                        <div class="col-md-4">
                            @Html.DropDownListFor(m => m.UserProfile.JurisdictionId,
                                selectList:Model.UserProfile.StateList.Select(i => new SelectListItem
                                                                                   {
                                                                                       Text = i.StateName,
                                                                                       Value = i.JurisdictionId.ToString(),
                                                                                       Selected = Model.UserProfile.JurisdictionId == i.JurisdictionId
                                                                                   }).ToList(),
                                htmlAttributes:new
                                               {
                                                   @class = "form-control",
                                                   disabled = "disabled"
                                               }
                                )
                            @Html.HiddenFor(m => m.UserProfile.JurisdictionId)
                            @Html.ValidationMessageFor(m => m.UserProfile.JurisdictionId, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               }
                                )
                        </div>
                    </div>

                    <!-- Line 5 Zip Code -->
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserProfile.ZipCode, htmlAttributes:new
                                                                                  {
                                                                                      @class = "control-label col-md-2 required"
                                                                                  })
                        <div class="col-md-4">
                            @Html.EditorFor(model => Model.UserProfile.ZipCode,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.ZipCode, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>

                    <!-- Line 6 Phone and Ext -->
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserProfile.PhoneNumber, htmlAttributes:new
                                                                                      {
                                                                                          @class = "control-label col-md-2 required"
                                                                                      })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.PhoneNumber,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control"
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserProfile.PhoneNumber, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>

                        @Html.LabelFor(m => m.UserProfile.PhoneExt,
                            htmlAttributes:new
                                           {
                                               @class = "control-label col-md-2"
                                           })
                        <div class="col-md-4">
                            @Html.EditorFor(m => m.UserProfile.PhoneExt,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control",
                                                                            type = "text"
                                                                        }
                                                   })
                        </div>
                    </div>
                </div>
                <hr />

                <!-- Line 7 Email -->
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.Email,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2 required"
                                       })
                    <div class="col-md-4">
                        @Html.EditorFor(m => m.UserProfile.Email,
                            additionalViewData:new
                                               {
                                                   htmlAttributes = new
                                                                    {
                                                                        @class = "form-control",
                                                                        @readonly = "true"
                                                                    }
                                               })
                        @*@Html.ValidationMessageFor(m => m.UserProfile.Email, "", new { @class = "text-danger" })*@
                    </div>
                    <div>
                        @Html.ActionLink(linkText:"Change", actionName:"ChangeEmail", controllerName:"Account", routeValues:null,
                            htmlAttributes:new
                                           {
                                               @class = "left-flow-link"
                                           })
                    </div>

                </div>

                <!-- Line 8 UserName -->
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.UserName,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2 required"
                                       })
                    <div class="col-md-4">
                        @Html.EditorFor(m => m.UserProfile.UserName,
                            additionalViewData:new
                                               {
                                                   htmlAttributes = new
                                                                    {
                                                                        @class = "form-control",
                                                                        @readonly = "true"
                                                                    }
                                               })
                        @*@Html.ValidationMessageFor(m => m.UserProfile.UserName, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <!-- Line 9 Password -->
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.Password,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2 required"
                                       })
                    <div class="col-md-4">
                        @Html.PasswordFor(m => m.UserProfile.Password,
                            htmlAttributes:new
                                           {
                                               @class = "form-control",
                                               @readonly = "true"
                                           })
                        @*@Html.ValidationMessageFor(m => m.UserProfile.Password, "", new { @class = "text-danger" })*@
                    </div>
                    @Html.ActionLink(linkText:"Change", actionName:"ChangePassword", controllerName:"Account", routeValues:null,
                        htmlAttributes:new
                                       {
                                           @class = "left-flow-link"
                                       })
                </div>
                <hr />
                <!-- Line 10 Role and signatory-->
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.Role,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2"
                                       })

                    <div class="col-md-4">
                        @Html.EditorFor(m => m.UserProfile.Role,
                            additionalViewData:new
                                               {
                                                   htmlAttributes = new
                                                                    {
                                                                        @class = "form-control",
                                                                        @readonly = "true"
                                                                    }
                                               })
                    </div>

                    @Html.LabelFor(m => m.UserProfile.HasSigntory,
                        htmlAttributes:new
                                       {
                                           @class = "control-label col-md-2"
                                       })
                    <div class="col-md-4">
                        @Html.EditorFor(model => Model.UserProfile.HasSigntoryText,
                            additionalViewData:new
                                               {
                                                   htmlAttributes = new
                                                                    {
                                                                        @class = "form-control",
                                                                        @readonly = "true"
                                                                    }
                                               })
                    </div>
                </div>

            </section>
            <div class="box-footer">
                <div class="form-group">
                    <div class="btn btn-primary btn-sm edit-button pull-right" id="profileEditBtn">
                        Edit
                    </div>
                    <input id="profileSubmit" type="submit" value="Save" name="Command" class="btn btn-primary btn-sm pull-right" formaction="@Url.Action(actionName:"UserProfile", controllerName:"User", routeValues:new {part = "Profile"})#user-info-panel" formmethod="post" />
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input id="profileCollapsed" name="profileCollapsed" type="hidden" value="true" />
    <input id="kbqCollapsed" name="kbqCollapsed" type="hidden" value="false" />
    <input id="sqCollapsed" name="sqCollapsed" type="hidden" value="false" />

    <div class="profileDiv" id="kbq-panel">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Knowledge Based Questions
                </h3>
                <div class="box-tools pull-right">
                    <div class="pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div>
                @if (ViewData.ModelState.IsValid == false && inValidKBQ)
                {
                    @Html.ValidationSummary(excludePropertyErrors:false, message:"",
                        htmlAttributes:new
                                       {
                                           @class = "alert alert-danger"
                                       })
                }

                @{
                    var vm = new ConfirmationMessageViewModal
                             {
                                 ShowMessage = ViewBag.SaveKBQSuccessfull != null && !string.IsNullOrWhiteSpace(value:ViewBag.SuccessMessage),
                                 Messaage = ViewBag.SuccessMessage
                             };

                    @Html.Partial(partialViewName:"_ConfirmationMessageView", model:vm)
                }
            </div>

            <section class="box-body form-horizontal">
                <h4>Select Answers to 5 Knowledge Based Questions</h4>
                <span>
                    Knowledge Based Questions are used along with your password to further prove your identity during report submission.
                    During report submission you will be required to enter an answer that matches what you enter below.
                </span>
                <br />
                <br />
                <br />
                <div class="editabledDiv">
                    <!-- question 1 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQ1)
                        </div>
                        <div class="col-md-8">
                            @Html.DropDownListFor(
                                                  m => m.UserKBQ.KBQ1,
                                selectList:kbqQuestionPool.Select(i => new SelectListItem
                                                                       {
                                                                           Text = i.Content,
                                                                           Value = i.QuestionId.Value.ToString(),
                                                                           Selected = Model.UserKBQ.KBQ1 == i.QuestionId.Value
                                                                       }),
                                htmlAttributes:new
                                               {
                                                   @class = "form-control",
                                                   disabled = "disabled"
                                               })
                        </div>
                    </div>

                    <!-- answer 1 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQAnswer1,
                                htmlAttributes:new
                                               {
                                                   @class = "control-label required"
                                               })
                        </div>

                        <div class="col-md-8">
                            <input class="disabled form-control" type="password" value="*******" />

                            <!-- DO NOT USE Html.HiddenFor HERE! Please refer to WARNING at the top of this page-->
                            <input type="hidden" name="@Html.NameFor(x => Model.UserKBQ.UserQuestionAnserId_KBQ1)" value="@Model.UserKBQ.UserQuestionAnserId_KBQ1" />

                            @Html.EditorFor(m => m.UserKBQ.KBQAnswer1,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control",
                                                                            autocomplete = "off",
                                                                            maxlength = 50
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer1, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>

                    <!-- question 2 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQ2)
                        </div>
                        <div class="col-md-8">
                            @Html.DropDownListFor(
                                                  m => m.UserKBQ.KBQ2,
                                selectList:kbqQuestionPool.Select(i => new SelectListItem
                                                                       {
                                                                           Text = i.Content,
                                                                           Value = i.QuestionId.Value.ToString(),
                                                                           Selected = Model.UserKBQ.KBQ2 == i.QuestionId.Value
                                                                       }),
                                htmlAttributes:new
                                               {
                                                   @class = "form-control",
                                                   disabled = "disabled"
                                               })
                            @Html.HiddenFor(m => m.UserKBQ.KBQ2)
                        </div>
                    </div>

                    <!-- answer 2 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQAnswer2,
                                htmlAttributes:new
                                               {
                                                   @class = "control-label required"
                                               })
                        </div>

                        <div class="col-md-8">
                            <input class="disabled form-control" type="password" value="*******" />

                            <!-- DO NOT USE Html.HiddenFor HERE! Please refer to WARNING at the top of this page-->
                            <input type="hidden" name="@Html.NameFor(x => Model.UserKBQ.UserQuestionAnserId_KBQ2)" value="@Model.UserKBQ.UserQuestionAnserId_KBQ2" />

                            @Html.EditorFor(m => m.UserKBQ.KBQAnswer2,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control",
                                                                            autocomplete = "off",
                                                                            maxlength = 50
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer2, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>

                    <!-- question 3 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQ3)
                        </div>
                        <div class="col-md-8">
                            @Html.DropDownListFor(
                                                  m => m.UserKBQ.KBQ3,
                                selectList:kbqQuestionPool.Select(i => new SelectListItem
                                                                       {
                                                                           Text = i.Content,
                                                                           Value = i.QuestionId.Value.ToString(),
                                                                           Selected = Model.UserKBQ.KBQ3 == i.QuestionId.Value
                                                                       }),
                                htmlAttributes:new
                                               {
                                                   @class = "form-control",
                                                   disabled = "disabled"
                                               })
                            @Html.HiddenFor(model => Model.UserKBQ.KBQ3)
                        </div>
                    </div>

                    <!-- answer 3 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQAnswer3,
                                htmlAttributes:new
                                               {
                                                   @class = "control-label required"
                                               })
                        </div>

                        <div class="col-md-8">
                            <input class="disabled form-control" type="password" value="*******" />

                            <!-- DO NOT USE Html.HiddenFor HERE! Please refer to WARNING at the top of this page-->
                            <input type="hidden" name="@Html.NameFor(x => Model.UserKBQ.UserQuestionAnserId_KBQ3)" value="@Model.UserKBQ.UserQuestionAnserId_KBQ3" />

                            @Html.EditorFor(m => m.UserKBQ.KBQAnswer3,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control",
                                                                            autocomplete = "off",
                                                                            maxlength = 50
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer3, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>

                    <!-- question 4 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQ4)
                        </div>
                        <div class="col-md-8">
                            @Html.DropDownListFor(
                                                  m => m.UserKBQ.KBQ4,
                                selectList:kbqQuestionPool.Select(i => new SelectListItem
                                                                       {
                                                                           Text = i.Content,
                                                                           Value = i.QuestionId.Value.ToString(),
                                                                           Selected = Model.UserKBQ.KBQ4 == i.QuestionId.Value
                                                                       }),
                                htmlAttributes:new
                                               {
                                                   @class = "form-control",
                                                   disabled = "disabled"
                                               })
                            @Html.HiddenFor(model => Model.UserKBQ.KBQ4)
                        </div>
                    </div>

                    <!-- answer 4 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQAnswer4,
                                htmlAttributes:new
                                               {
                                                   @class = "control-label required"
                                               })
                        </div>

                        <div class="col-md-8">
                            <input class="disabled form-control" type="password" value="*******" />

                            <!-- DO NOT USE Html.HiddenFor HERE! Please refer to WARNING at the top of this page-->
                            <input type="hidden" name="@Html.NameFor(x => Model.UserKBQ.UserQuestionAnserId_KBQ4)" value="@Model.UserKBQ.UserQuestionAnserId_KBQ4" />

                            @Html.EditorFor(m => m.UserKBQ.KBQAnswer4,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control",
                                                                            autocomplete = "off",
                                                                            maxlength = 50
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer4, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>

                    <!-- question 5 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQ5)
                        </div>
                        <div class="col-md-8">
                            @Html.DropDownListFor(
                                                  m => m.UserKBQ.KBQ5,
                                selectList:kbqQuestionPool.Select(i => new SelectListItem
                                                                       {
                                                                           Text = i.Content,
                                                                           Value = i.QuestionId.Value.ToString(),
                                                                           Selected = Model.UserKBQ.KBQ5 == i.QuestionId.Value
                                                                       }),
                                htmlAttributes:new
                                               {
                                                   @class = "form-control",
                                                   disabled = "disabled"
                                               })
                            @Html.HiddenFor(m => m.UserKBQ.KBQ5)
                        </div>
                    </div>

                    <!-- answer 5 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserKBQ.KBQAnswer5,
                                htmlAttributes:new
                                               {
                                                   @class = "control-label required"
                                               })
                        </div>

                        <div class="col-md-8">
                            <input class="disabled form-control" type="password" value="*******" />

                            <!-- DO NOT USE Html.HiddenFor HERE! Please refer to WARNING at the top of this page-->
                            <input type="hidden" name="@Html.NameFor(x => Model.UserKBQ.UserQuestionAnserId_KBQ5)" value="@Model.UserKBQ.UserQuestionAnserId_KBQ5" />

                            @Html.EditorFor(m => m.UserKBQ.KBQAnswer5,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control",
                                                                            autocomplete = "off",
                                                                            maxlength = 50
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserKBQ.KBQAnswer5, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>
                </div>
            </section>
            <div class="box-footer">
                <div class="form-group">
                    <div class="btn btn-primary btn-sm edit-button pull-right" id="kbqEditBtn">
                        Edit
                    </div>
                    <input type="submit" id="kbqSubmit" value="Save" name="Command" class="btn btn-primary btn-sm pull-right" formaction="@Url.Action(actionName:"UserProfile", controllerName:"User", routeValues:new {part = "KBQ"})#kbq-panel" formmethod="post" />
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input id="profileCollapsed" name="profileCollapsed" type="hidden" />
    <input id="kbqCollapsed" name="kbqCollapsed" type="hidden" />
    <input id="sqCollapsed" name="sqCollapsed" type="hidden" />

    <div class="profileDiv" id="sq-panel">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Security Questions
                </h3>
                <div class="box-tools pull-right">
                    <div class="pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div>
                @if (ViewData.ModelState.IsValid == false && inValidSQ)
                {
                    @Html.ValidationSummary(excludePropertyErrors:false, message:"",
                        htmlAttributes:new
                                       {
                                           @class = "alert alert-danger"
                                       })
                }

                @{
                    var vm = new ConfirmationMessageViewModal
                             {
                                 ShowMessage = ViewBag.SaveSQSuccessfull != null && !string.IsNullOrWhiteSpace(value:ViewBag.SuccessMessage),
                                 Messaage = ViewBag.SuccessMessage
                             };

                    @Html.Partial(partialViewName:"_ConfirmationMessageView", model:vm)
                }
            </div>

            <section class="box-body form-horizontal">
                <h4>
                    Select Answers to 2 Security Questions
                </h4>
                <span>
                    Security Questions are used to unlock your account if it is locked because of suspicion of compromise.
                    You may be asked the answer to these questions by your authority.
                </span>
                <br />
                <br />
                <br />
                <div class="editabledDiv">
                    <!-- question 1 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserSQ.SecurityQuestion1)
                        </div>
                        <div class="col-md-8">
                            @Html.DropDownListFor(
                                                  m => m.UserSQ.SecurityQuestion1,
                                selectList:sqQuestionPool.Select(i => new SelectListItem
                                                                      {
                                                                          Text = i.Content,
                                                                          Value = i.QuestionId.Value.ToString(),
                                                                          Selected = Model.UserSQ.SecurityQuestion1 == i.QuestionId.Value
                                                                      }),
                                htmlAttributes:new
                                               {
                                                   @class = "form-control",
                                                   disabled = "disabled"
                                               })
                            @*@Html.HiddenFor(m => m.UserSQ.SecurityQuestionAnswer1)*@
                        </div>
                    </div>

                    <!-- answer 1 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserSQ.SecurityQuestionAnswer1, htmlAttributes:new
                                                                                                 {
                                                                                                     @class = "control-label required"
                                                                                                 })
                        </div>

                        <div class="col-md-8">
                            <!-- DO NOT USE Html.HiddenFor HERE! Please refer to WARNING at the top of this page-->
                            <input type="hidden" name="@Html.NameFor(x => Model.UserSQ.UserQuestionAnserId_SQ1)" value="@Model.UserSQ.UserQuestionAnserId_SQ1" />

                            @Html.EditorFor(m => m.UserSQ.SecurityQuestionAnswer1,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control readonly",
                                                                            autocomplete = "off",
                                                                            maxlength = 50
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserSQ.SecurityQuestionAnswer1, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>

                    <!-- question 2 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserSQ.SecurityQuestion2)
                        </div>
                        <div class="col-md-8">
                            @Html.DropDownListFor(
                                                  m => m.UserSQ.SecurityQuestion2,
                                selectList:sqQuestionPool.Select(i => new SelectListItem
                                                                      {
                                                                          Text = i.Content,
                                                                          Value = i.QuestionId.Value.ToString(),
                                                                          Selected = Model.UserSQ.SecurityQuestion1 == i.QuestionId.Value
                                                                      }),
                                htmlAttributes:new
                                               {
                                                   @class = "form-control",
                                                   disabled = "disabled"
                                               })
                            @*@Html.HiddenFor(m => m.UserSQ.SecurityQuestionAnswer2)*@
                        </div>
                    </div>

                    <!-- answer 2 -->
                    <div class="form-group">
                        <div class="col-lg-2 control-label">
                            @Html.LabelFor(m => m.UserSQ.SecurityQuestionAnswer2, htmlAttributes:new
                                                                                                 {
                                                                                                     @class = "control-label required"
                                                                                                 })
                        </div>

                        <div class="col-md-8">
                            <!-- DO NOT USE Html.HiddenFor HERE! Please refer to WARNING at the top of this page-->
                            <input type="hidden" name="@Html.NameFor(x => Model.UserSQ.UserQuestionAnserId_SQ2)" value="@Model.UserSQ.UserQuestionAnserId_SQ2" />

                            @Html.EditorFor(m => m.UserSQ.SecurityQuestionAnswer2,
                                additionalViewData:new
                                                   {
                                                       htmlAttributes = new
                                                                        {
                                                                            @class = "form-control readonly",
                                                                            autocomplete = "off",
                                                                            maxlength = 50
                                                                        }
                                                   })
                            @Html.ValidationMessageFor(m => m.UserSQ.SecurityQuestionAnswer2, validationMessage:"",
                                htmlAttributes:new
                                               {
                                                   @class = "text-danger"
                                               })
                        </div>
                    </div>
                </div>

            </section>
            <div class="box-footer">
                <div class="form-group">
                    <div class="btn btn-primary btn-sm edit-button pull-right" id="sqEditBtn">
                        Edit
                    </div>
                    <input type="submit" id="sqSubmit" value="Save" name="Command" class="btn btn-primary btn-sm pull-right" formaction="@Url.Action(actionName:"UserProfile", controllerName:"User", routeValues:new {part = "SQ"})#sq-panel" formmethod="post" />
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render(paths:"~/bundles/profile")
    @Scripts.Render(paths:"~/bundles/jqueryval")

    <script type="text/javascript">
        var profileCollapsed = '@Html.Raw(ViewBag.profileCollapsed)';
        var kbqCollapsed = '@Html.Raw(ViewBag.kbqCollapsed)';
        var sqCollapsed = '@Html.Raw(ViewBag.sqCollapsed)';
        var newRegistration = '@Html.Raw(ViewBag.newRegistration)';

        $(document)
            .ready(function()
            {
                disableAutoComplete();
            }());
    </script>
}